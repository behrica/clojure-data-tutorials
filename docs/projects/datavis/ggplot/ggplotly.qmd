
---
format:
  html: {toc: true, toc-depth: 4, theme: cosmo, output-file: ggplotly.html}
code-block-background: true
include-in-header: {text: '<link rel = "icon" href = "data:," />'}

---
<style></style><style>.printedClojure .sourceCode {
  background-color: transparent;
  border-style: none;
}
</style><style>.clay-limit-image-width .clay-image {max-width: 100%}
</style>
<script src="ggplotly_files/md-default0.js" type="text/javascript"></script><script src="ggplotly_files/md-default1.js" type="text/javascript"></script><script src="htmlwidgets-ggplotly/gh-repos/scicloj/ggplotly-deps/htmlwidgets-1.6.2/htmlwidgets.js" type="text/javascript"></script><script src="htmlwidgets-ggplotly/gh-repos/scicloj/ggplotly-deps/plotly-binding-4.10.4.9000/plotly.js" type="text/javascript"></script><script src="htmlwidgets-ggplotly/gh-repos/scicloj/ggplotly-deps/typedarray-0.1/typedarray.min.js" type="text/javascript"></script><script src="htmlwidgets-ggplotly/gh-repos/scicloj/ggplotly-deps/jquery-3.5.1/jquery.min.js" type="text/javascript"></script><script src="htmlwidgets-ggplotly/gh-repos/scicloj/ggplotly-deps/crosstalk-1.2.1/js/crosstalk.min.js" type="text/javascript"></script><script src="htmlwidgets-ggplotly/gh-repos/scicloj/ggplotly-deps/plotly-main-2.11.1/plotly-latest.min.js" type="text/javascript"></script><link href="htmlwidgets-ggplotly/gh-repos/scicloj/ggplotly-deps/crosstalk-1.2.1/css/crosstalk.min.css" rel="stylesheet" type="text/css" /><link href="htmlwidgets-ggplotly/gh-repos/scicloj/ggplotly-deps/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css" rel="stylesheet" type="text/css" />

```{=html}
<table><tr><td>This is part of the Scicloj <a href="https://scicloj.github.io/clojure-data-scrapbook/">Clojure Data Scrapbook</a>.</td><a href="https://scicloj.github.io/clojure-data-scrapbook/"><img align="left" alt="SciCloj logo" src="https://scicloj.github.io/sci-cloj-logo-transparent.png" width="40" /></a></tr></table>
```



::: {.sourceClojure}
```clojure
(ns ggplotly
  (:require [scicloj.kindly.v4.kind :as kind]
            [charred.api :as charred]
            [clojure.math :as math]
            [scicloj.ggclj.geom.point :as point]
            [scicloj.ggclj.api :as gg]
            [scicloj.metamorph.ml.toydata.ggplot :as toydata.ggplot]
            [tablecloth.api :as tc]))
```
:::



# Rendering ggclj using htmlwidgets ggplotly

Here we render plots through the JS client side of [ggplotly](https://plotly.com/ggplot2/)
- an R package (part of the [htmlwidgets](https://www.htmlwidgets.org/) ecosystem) offering a Plotly fronted for ggplot2's grammar of graphics implementation.

The following is a work-in-progress attempt to generate
JSON specs of the kind consumed by ggplotly's client side.

The following spec function was generaged by mimicking R's
`ggplotlTentativey(ggplot(mtcars, aes(wt, mpg)) + geom_point())`'s output.
Therefore, some parts are hard-coded and require generalization.
Other parts are still missing (e.g., specifying colours).


::: {.sourceClojure}
```clojure
(defn ->ggplotly-spec [{:keys [layers labels]}]
  (kind/htmlwidgets-ggplotly
   (let [;; assuming one layer:
         {:keys [data xmin xmax ymin ymax]} (first layers)
         ;; an auxiliary function:
         ->tickvals (fn [l r]
                      (let [jump (-> (- r l)
                                     (/ 6)
                                     math/floor
                                     int
                                     (max 1))]
                        (-> l
                            math/ceil
                            (range r jump))))]
     {:x
      {:config
       {:doubleClick "reset",
        :modeBarButtonsToAdd ["hoverclosest" "hovercompare"],
        :showSendToCloud false},
       :layout
       {:plot_bgcolor "rgba(235,235,235,1)",
        :paper_bgcolor "rgba(255,255,255,1)",
        :legend
        {:bgcolor "rgba(255,255,255,1)",
         :bordercolor "transparent",
         :borderwidth 1.88976377952756,
         :font {:color "rgba(0,0,0,1)", :family "", :size 11.689497716895}},
        :xaxis (let [tickvals (->tickvals xmin xmax)
                     ticktext (mapv str tickvals)
                     range-len (- xmax xmin)
                     range-expansion (* 0.1 range-len)
                     expanded-range [(- xmin range-expansion)
                                     (+ xmax range-expansion)]]
                 {:linewidth 0,
                  :nticks nil,
                  :linecolor nil,
                  :ticklen 3.65296803652968,
                  :tickcolor "rgba(51,51,51,1)",
                  :tickmode "array",
                  :gridcolor "rgba(255,255,255,1)",
                  :automargin true,
                  :type "linear",
                  :tickvals tickvals
                  :zeroline false,
                  :title
                  {:text (:x labels),
                   :font {:color "rgba(0,0,0,1)", :family "", :size 14.6118721461187}},
                  :tickfont {:color "rgba(77,77,77,1)", :family "", :size 11.689497716895},
                  :autorange false,
                  :showticklabels true,
                  :showline false,
                  :showgrid true,
                  :ticktext ticktext
                  :ticks "outside",
                  :gridwidth 0.66417600664176,
                  :anchor "y",
                  :domain [0 1],
                  :hoverformat ".2f",
                  :tickangle 0,
                  :tickwidth 0.66417600664176,
                  :categoryarray ticktext,
                  :categoryorder "array",
                  :range expanded-range},)
        :font {:color "rgba(0,0,0,1)", :family "", :size 14.6118721461187},
        :showlegend false,
        :barmode "relative",
        :yaxis (let [tickvals (->tickvals ymin ymax)
                     ticktext (mapv str tickvals)
                     range-len (- ymax ymin)
                     range-expansion (* 0.1 range-len)
                     expanded-range [(- ymin range-expansion)
                                     (+ ymax range-expansion)]]
                 {:linewidth 0,
                  :nticks nil,
                  :linecolor nil,
                  :ticklen 3.65296803652968,
                  :tickcolor "rgba(51,51,51,1)",
                  :tickmode "array",
                  :gridcolor "rgba(255,255,255,1)",
                  :automargin true,
                  :type "linear",
                  :tickvals tickvals,
                  :zeroline false,
                  :title
                  {:text (:y labels),
                   :font {:color "rgba(0,0,0,1)", :family "", :size 14.6118721461187}},
                  :tickfont {:color "rgba(77,77,77,1)", :family "", :size 11.689497716895},
                  :autorange false,
                  :showticklabels true,
                  :showline false,
                  :showgrid true,
                  :ticktext ticktext,
                  :ticks "outside",
                  :gridwidth 0.66417600664176,
                  :anchor "x",
                  :domain [0 1],
                  :hoverformat ".2f",
                  :tickangle 0,
                  :tickwidth 0.66417600664176,
                  :categoryarray ticktext,
                  :categoryorder "array",
                  :range expanded-range},)
        :hovermode "closest",
        :margin
        {:t 25.7412480974125,
         :r 7.30593607305936,
         :b 39.6955859969559,
         :l 37.2602739726027},
        :shapes
        [{:yref "paper",
          :fillcolor nil,
          :xref "paper",
          :y1 1,
          :type "rect",
          :line {:color nil, :width 0, :linetype []},
          :y0 0,
          :x1 1,
          :x0 0}]},
       :highlight
       {:on "plotly_click"
        :persistent false,
        :dynamic false,
        :selectize false,
        :opacityDim 0.2,
        :selected {:opacity 1},
        :debounce 0},
       :base_url "https://plot.ly",
       :cur_data "1f2fea5b54d146",
       :source "A",
       :shinyEvents
       ["plotly_hover"
        "plotly_click"
        "plotly_selected"
        "plotly_relayout"
        "plotly_brushed"
        "plotly_brushing"
        "plotly_clickannotation"
        "plotly_doubleclick"
        "plotly_deselect"
        "plotly_afterplot"
        "plotly_sunburstclick"],
       :attrs {:1f2fea5b54d146 {:x {}, :y {}, :type "scatter"}},
       :data
       [{:y (:y data)
         :hoveron "points",
         :frame nil,
         :hoverinfo "text",
         :marker
         {:autocolorscale false,
          :color "rgba(0,0,0,1)",
          :opacity 1,
          :size 5.66929133858268,
          :symbol "circle",
          :line {:width 1.88976377952756, :color "rgba(0,0,0,1)"}},
         :mode "markers",
         :type "scatter",
         :xaxis "x",
         :showlegend false,
         :yaxis "y",
         :x (:x data)
         :text (-> data
                   (tc/select-columns [:x :y])
                   (tc/rows :as-maps)
                   (->> (mapv pr-str)))}]},
      :evals [],
      :jsHooks []})))
```
:::


Now here is how we can display a ggclj structure as a ggplotly plot.


::: {.sourceClojure}
```clojure
(defn ggplotly [ggplot]
  (-> ggplot
      gg/ggplot-build
      ->ggplotly-spec))
```
:::


Let us try it with ggplot's `mpg` dataset.


::: {.sourceClojure}
```clojure
(-> toydata.ggplot/mpg
    (gg/ggplot (gg/aes :displ :hwy))
    (point/geom-point)
    ggplotly)
```
:::



```{=html}
<div class="plotly html-widget html-fill-item-overflow-hidden html-fill-item" id="htmlwidget-170" style="width:100%;height:400px;"><script data-for="htmlwidget-170" type="application/htmlwidget-sizing">{"viewer":{"width":"100%","height":400,"padding":"0","fille":true},"browser":{"width":"100%","height":400,"padding":"0","fille":true}}</script><script data-for="htmlwidget-170" type="application/json">{"x":{"config":{"doubleClick":"reset","modeBarButtonsToAdd":["hoverclosest","hovercompare"],"showSendToCloud":false},"layout":{"plot_bgcolor":"rgba(235,235,235,1)","paper_bgcolor":"rgba(255,255,255,1)","legend":{"bgcolor":"rgba(255,255,255,1)","bordercolor":"transparent","borderwidth":1.88976377952756,"font":{"color":"rgba(0,0,0,1)","family":"","size":11.689497716895}},"xaxis":{"linewidth":0,"nticks":null,"linecolor":null,"ticklen":3.65296803652968,"tickcolor":"rgba(51,51,51,1)","tickmode":"array","gridcolor":"rgba(255,255,255,1)","automargin":true,"type":"linear","tickvals":[2.0,3.0,4.0,5.0,6.0],"zeroline":false,"title":{"text":"displ","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187}},"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"autorange":false,"showticklabels":true,"showline":false,"showgrid":true,"ticktext":["2.0","3.0","4.0","5.0","6.0"],"ticks":"outside","gridwidth":0.66417600664176,"anchor":"y","domain":[0,1],"hoverformat":".2f","tickangle":0,"tickwidth":0.66417600664176,"categoryarray":["2.0","3.0","4.0","5.0","6.0"],"categoryorder":"array","range":[1.06,7.54]},"font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187},"showlegend":false,"barmode":"relative","yaxis":{"linewidth":0,"nticks":null,"linecolor":null,"ticklen":3.65296803652968,"tickcolor":"rgba(51,51,51,1)","tickmode":"array","gridcolor":"rgba(255,255,255,1)","automargin":true,"type":"linear","tickvals":[12.0,17.0,22.0,27.0,32.0,37.0,42.0],"zeroline":false,"title":{"text":"hwy","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187}},"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"autorange":false,"showticklabels":true,"showline":false,"showgrid":true,"ticktext":["12.0","17.0","22.0","27.0","32.0","37.0","42.0"],"ticks":"outside","gridwidth":0.66417600664176,"anchor":"x","domain":[0,1],"hoverformat":".2f","tickangle":0,"tickwidth":0.66417600664176,"categoryarray":["12.0","17.0","22.0","27.0","32.0","37.0","42.0"],"categoryorder":"array","range":[8.8,47.2]},"hovermode":"closest","margin":{"t":25.7412480974125,"r":7.30593607305936,"b":39.6955859969559,"l":37.2602739726027},"shapes":[{"yref":"paper","fillcolor":null,"xref":"paper","y1":1,"type":"rect","line":{"color":null,"width":0,"linetype":[]},"y0":0,"x1":1,"x0":0}]},"highlight":{"on":"plotly_click","persistent":false,"dynamic":false,"selectize":false,"opacityDim":0.2,"selected":{"opacity":1},"debounce":0},"base_url":"https:\/\/plot.ly","cur_data":"1f2fea5b54d146","source":"A","shinyEvents":["plotly_hover","plotly_click","plotly_selected","plotly_relayout","plotly_brushed","plotly_brushing","plotly_clickannotation","plotly_doubleclick","plotly_deselect","plotly_afterplot","plotly_sunburstclick"],"attrs":{"1f2fea5b54d146":{"x":{},"y":{},"type":"scatter"}},"data":[{"y":[29,29,31,30,26,26,27,26,25,28,27,25,25,25,25,24,25,23,20,15,20,17,17,26,23,26,25,24,19,14,15,17,27,30,26,29,26,24,24,22,22,24,24,17,22,21,23,23,19,18,17,17,19,19,12,17,15,17,17,12,17,16,18,15,16,12,17,17,16,12,15,16,17,15,17,17,18,17,19,17,19,19,17,17,17,16,16,17,15,17,26,25,26,24,21,22,23,22,20,33,32,32,29,32,34,36,36,29,26,27,30,31,26,26,28,26,29,28,27,24,24,24,22,19,20,17,12,19,18,14,15,18,18,15,17,16,18,17,19,19,17,29,27,31,32,27,26,26,25,25,17,17,20,18,26,26,27,28,25,25,24,27,25,26,23,26,26,26,26,25,27,25,27,20,20,19,17,20,17,29,27,31,31,26,26,28,27,29,31,31,26,26,27,30,33,35,37,35,15,18,20,20,22,17,19,18,20,29,26,29,29,24,44,29,26,29,29,29,29,23,24,44,41,29,26,28,29,29,29,28,29,26,26,26],"hoveron":"points","frame":null,"hoverinfo":"text","marker":{"autocolorscale":false,"color":"rgba(0,0,0,1)","opacity":1,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,0,0,1)"}},"mode":"markers","type":"scatter","xaxis":"x","showlegend":false,"yaxis":"y","x":[1.8,1.8,2.0,2.0,2.8,2.8,3.1,1.8,1.8,2.0,2.0,2.8,2.8,3.1,3.1,2.8,3.1,4.2,5.3,5.3,5.3,5.7,6.0,5.7,5.7,6.2,6.2,7.0,5.3,5.3,5.7,6.5,2.4,2.4,3.1,3.5,3.6,2.4,3.0,3.3,3.3,3.3,3.3,3.3,3.8,3.8,3.8,4.0,3.7,3.7,3.9,3.9,4.7,4.7,4.7,5.2,5.2,3.9,4.7,4.7,4.7,5.2,5.7,5.9,4.7,4.7,4.7,4.7,4.7,4.7,5.2,5.2,5.7,5.9,4.6,5.4,5.4,4.0,4.0,4.0,4.0,4.6,5.0,4.2,4.2,4.6,4.6,4.6,5.4,5.4,3.8,3.8,4.0,4.0,4.6,4.6,4.6,4.6,5.4,1.6,1.6,1.6,1.6,1.6,1.8,1.8,1.8,2.0,2.4,2.4,2.4,2.4,2.5,2.5,3.3,2.0,2.0,2.0,2.0,2.7,2.7,2.7,3.0,3.7,4.0,4.7,4.7,4.7,5.7,6.1,4.0,4.2,4.4,4.6,5.4,5.4,5.4,4.0,4.0,4.6,5.0,2.4,2.4,2.5,2.5,3.5,3.5,3.0,3.0,3.5,3.3,3.3,4.0,5.6,3.1,3.8,3.8,3.8,5.3,2.5,2.5,2.5,2.5,2.5,2.5,2.2,2.2,2.5,2.5,2.5,2.5,2.5,2.5,2.7,2.7,3.4,3.4,4.0,4.7,2.2,2.2,2.4,2.4,3.0,3.0,3.5,2.2,2.2,2.4,2.4,3.0,3.0,3.3,1.8,1.8,1.8,1.8,1.8,4.7,5.7,2.7,2.7,2.7,3.4,3.4,4.0,4.0,2.0,2.0,2.0,2.0,2.8,1.9,2.0,2.0,2.0,2.0,2.5,2.5,2.8,2.8,1.9,1.9,2.0,2.0,2.5,2.5,1.8,1.8,2.0,2.0,2.8,2.8,3.6],"text":["{:x 1.8, :y 29}","{:x 1.8, :y 29}","{:x 2.0, :y 31}","{:x 2.0, :y 30}","{:x 2.8, :y 26}","{:x 2.8, :y 26}","{:x 3.1, :y 27}","{:x 1.8, :y 26}","{:x 1.8, :y 25}","{:x 2.0, :y 28}","{:x 2.0, :y 27}","{:x 2.8, :y 25}","{:x 2.8, :y 25}","{:x 3.1, :y 25}","{:x 3.1, :y 25}","{:x 2.8, :y 24}","{:x 3.1, :y 25}","{:x 4.2, :y 23}","{:x 5.3, :y 20}","{:x 5.3, :y 15}","{:x 5.3, :y 20}","{:x 5.7, :y 17}","{:x 6.0, :y 17}","{:x 5.7, :y 26}","{:x 5.7, :y 23}","{:x 6.2, :y 26}","{:x 6.2, :y 25}","{:x 7.0, :y 24}","{:x 5.3, :y 19}","{:x 5.3, :y 14}","{:x 5.7, :y 15}","{:x 6.5, :y 17}","{:x 2.4, :y 27}","{:x 2.4, :y 30}","{:x 3.1, :y 26}","{:x 3.5, :y 29}","{:x 3.6, :y 26}","{:x 2.4, :y 24}","{:x 3.0, :y 24}","{:x 3.3, :y 22}","{:x 3.3, :y 22}","{:x 3.3, :y 24}","{:x 3.3, :y 24}","{:x 3.3, :y 17}","{:x 3.8, :y 22}","{:x 3.8, :y 21}","{:x 3.8, :y 23}","{:x 4.0, :y 23}","{:x 3.7, :y 19}","{:x 3.7, :y 18}","{:x 3.9, :y 17}","{:x 3.9, :y 17}","{:x 4.7, :y 19}","{:x 4.7, :y 19}","{:x 4.7, :y 12}","{:x 5.2, :y 17}","{:x 5.2, :y 15}","{:x 3.9, :y 17}","{:x 4.7, :y 17}","{:x 4.7, :y 12}","{:x 4.7, :y 17}","{:x 5.2, :y 16}","{:x 5.7, :y 18}","{:x 5.9, :y 15}","{:x 4.7, :y 16}","{:x 4.7, :y 12}","{:x 4.7, :y 17}","{:x 4.7, :y 17}","{:x 4.7, :y 16}","{:x 4.7, :y 12}","{:x 5.2, :y 15}","{:x 5.2, :y 16}","{:x 5.7, :y 17}","{:x 5.9, :y 15}","{:x 4.6, :y 17}","{:x 5.4, :y 17}","{:x 5.4, :y 18}","{:x 4.0, :y 17}","{:x 4.0, :y 19}","{:x 4.0, :y 17}","{:x 4.0, :y 19}","{:x 4.6, :y 19}","{:x 5.0, :y 17}","{:x 4.2, :y 17}","{:x 4.2, :y 17}","{:x 4.6, :y 16}","{:x 4.6, :y 16}","{:x 4.6, :y 17}","{:x 5.4, :y 15}","{:x 5.4, :y 17}","{:x 3.8, :y 26}","{:x 3.8, :y 25}","{:x 4.0, :y 26}","{:x 4.0, :y 24}","{:x 4.6, :y 21}","{:x 4.6, :y 22}","{:x 4.6, :y 23}","{:x 4.6, :y 22}","{:x 5.4, :y 20}","{:x 1.6, :y 33}","{:x 1.6, :y 32}","{:x 1.6, :y 32}","{:x 1.6, :y 29}","{:x 1.6, :y 32}","{:x 1.8, :y 34}","{:x 1.8, :y 36}","{:x 1.8, :y 36}","{:x 2.0, :y 29}","{:x 2.4, :y 26}","{:x 2.4, :y 27}","{:x 2.4, :y 30}","{:x 2.4, :y 31}","{:x 2.5, :y 26}","{:x 2.5, :y 26}","{:x 3.3, :y 28}","{:x 2.0, :y 26}","{:x 2.0, :y 29}","{:x 2.0, :y 28}","{:x 2.0, :y 27}","{:x 2.7, :y 24}","{:x 2.7, :y 24}","{:x 2.7, :y 24}","{:x 3.0, :y 22}","{:x 3.7, :y 19}","{:x 4.0, :y 20}","{:x 4.7, :y 17}","{:x 4.7, :y 12}","{:x 4.7, :y 19}","{:x 5.7, :y 18}","{:x 6.1, :y 14}","{:x 4.0, :y 15}","{:x 4.2, :y 18}","{:x 4.4, :y 18}","{:x 4.6, :y 15}","{:x 5.4, :y 17}","{:x 5.4, :y 16}","{:x 5.4, :y 18}","{:x 4.0, :y 17}","{:x 4.0, :y 19}","{:x 4.6, :y 19}","{:x 5.0, :y 17}","{:x 2.4, :y 29}","{:x 2.4, :y 27}","{:x 2.5, :y 31}","{:x 2.5, :y 32}","{:x 3.5, :y 27}","{:x 3.5, :y 26}","{:x 3.0, :y 26}","{:x 3.0, :y 25}","{:x 3.5, :y 25}","{:x 3.3, :y 17}","{:x 3.3, :y 17}","{:x 4.0, :y 20}","{:x 5.6, :y 18}","{:x 3.1, :y 26}","{:x 3.8, :y 26}","{:x 3.8, :y 27}","{:x 3.8, :y 28}","{:x 5.3, :y 25}","{:x 2.5, :y 25}","{:x 2.5, :y 24}","{:x 2.5, :y 27}","{:x 2.5, :y 25}","{:x 2.5, :y 26}","{:x 2.5, :y 23}","{:x 2.2, :y 26}","{:x 2.2, :y 26}","{:x 2.5, :y 26}","{:x 2.5, :y 26}","{:x 2.5, :y 25}","{:x 2.5, :y 27}","{:x 2.5, :y 25}","{:x 2.5, :y 27}","{:x 2.7, :y 20}","{:x 2.7, :y 20}","{:x 3.4, :y 19}","{:x 3.4, :y 17}","{:x 4.0, :y 20}","{:x 4.7, :y 17}","{:x 2.2, :y 29}","{:x 2.2, :y 27}","{:x 2.4, :y 31}","{:x 2.4, :y 31}","{:x 3.0, :y 26}","{:x 3.0, :y 26}","{:x 3.5, :y 28}","{:x 2.2, :y 27}","{:x 2.2, :y 29}","{:x 2.4, :y 31}","{:x 2.4, :y 31}","{:x 3.0, :y 26}","{:x 3.0, :y 26}","{:x 3.3, :y 27}","{:x 1.8, :y 30}","{:x 1.8, :y 33}","{:x 1.8, :y 35}","{:x 1.8, :y 37}","{:x 1.8, :y 35}","{:x 4.7, :y 15}","{:x 5.7, :y 18}","{:x 2.7, :y 20}","{:x 2.7, :y 20}","{:x 2.7, :y 22}","{:x 3.4, :y 17}","{:x 3.4, :y 19}","{:x 4.0, :y 18}","{:x 4.0, :y 20}","{:x 2.0, :y 29}","{:x 2.0, :y 26}","{:x 2.0, :y 29}","{:x 2.0, :y 29}","{:x 2.8, :y 24}","{:x 1.9, :y 44}","{:x 2.0, :y 29}","{:x 2.0, :y 26}","{:x 2.0, :y 29}","{:x 2.0, :y 29}","{:x 2.5, :y 29}","{:x 2.5, :y 29}","{:x 2.8, :y 23}","{:x 2.8, :y 24}","{:x 1.9, :y 44}","{:x 1.9, :y 41}","{:x 2.0, :y 29}","{:x 2.0, :y 26}","{:x 2.5, :y 28}","{:x 2.5, :y 29}","{:x 1.8, :y 29}","{:x 1.8, :y 29}","{:x 2.0, :y 28}","{:x 2.0, :y 29}","{:x 2.8, :y 26}","{:x 2.8, :y 26}","{:x 3.6, :y 26}"]}]},"evals":[],"jsHooks":[]}</script></div>
```



```{=html}
<div style="background-color:grey;height:2px;width:100%;"></div>
```



```{=html}
<div><pre><small><small>source: <a href="https://github.com/scicloj/clojure-data-scrapbook/blob/main/projects/datavis/ggplot/notebooks/ggplotly.clj">projects/datavis/ggplot/notebooks/ggplotly.clj</a></small></small></pre></div>
```
