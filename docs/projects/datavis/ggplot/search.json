[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Exploring ggplot",
    "section": "",
    "text": "This is part of the Scicloj Clojure Data Scrapbook.\n\n1 Preface\nIn this series of notebooks, we explore ggplot2, a famous R package for grammar-of-graphics data visualization, from within Clojure.\n\nsource: projects/datavis/ggplot/notebooks/index.clj",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Preface</span>"
    ]
  },
  {
    "objectID": "using_clojisr.html",
    "href": "using_clojisr.html",
    "title": "3  Using ggplot Clojure using ClojisR",
    "section": "",
    "text": "3.1 Setup\nWe will use ClojisR to call R from Clojure.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Using ggplot Clojure using ClojisR</span>"
    ]
  },
  {
    "objectID": "using_clojisr.html#setup",
    "href": "using_clojisr.html#setup",
    "title": "3  Using ggplot Clojure using ClojisR",
    "section": "",
    "text": "(ns using-clojisr\n  (:require [clojisr.v1.r :as r :refer [r]]\n            [clojisr.v1.applications.plotting :as plotting]\n            [scicloj.kindly.v4.kind :as kind]\n            [tablecloth.api :as tc]))",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Using ggplot Clojure using ClojisR</span>"
    ]
  },
  {
    "objectID": "using_clojisr.html#plotting-by-calling-r-code",
    "href": "using_clojisr.html#plotting-by-calling-r-code",
    "title": "3  Using ggplot Clojure using ClojisR",
    "section": "3.2 Plotting by calling R code",
    "text": "3.2 Plotting by calling R code\nLet us load ggplot2 at the R runtime:\n\n(r/library \"ggplot2\")\n\n\n[1] \"ggplot2\"   \"Rserve\"    \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    \n[7] \"datasets\"  \"methods\"   \"base\"     \n\n\nWe will use the mpg dataset, which is part of the ggplot package.\n\n(-&gt; \"mpg\"\n    r\n    r/r-&gt;clj)\n\n_unnamed [234 11]:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:manufacturer\n:model\n:displ\n:year\n:cyl\n:trans\n:drv\n:cty\n:hwy\n:fl\n:class\n\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\naudi\na4\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\ncompact\n\n\naudi\na4\n3.1\n2008\n6\nauto(av)\nf\n18\n27\np\ncompact\n\n\naudi\na4 quattro\n1.8\n1999\n4\nmanual(m5)\n4\n18\n26\np\ncompact\n\n\naudi\na4 quattro\n1.8\n1999\n4\nauto(l5)\n4\n16\n25\np\ncompact\n\n\naudi\na4 quattro\n2.0\n2008\n4\nmanual(m6)\n4\n20\n28\np\ncompact\n\n\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n\n\nvolkswagen\nnew beetle\n2.0\n1999\n4\nmanual(m5)\nf\n21\n29\nr\nsubcompact\n\n\nvolkswagen\nnew beetle\n2.0\n1999\n4\nauto(l4)\nf\n19\n26\nr\nsubcompact\n\n\nvolkswagen\nnew beetle\n2.5\n2008\n5\nmanual(m5)\nf\n20\n28\nr\nsubcompact\n\n\nvolkswagen\nnew beetle\n2.5\n2008\n5\nauto(s6)\nf\n20\n29\nr\nsubcompact\n\n\nvolkswagen\npassat\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\nmidsize\n\n\nvolkswagen\npassat\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\nmidsize\n\n\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\nHere is how we may generate a plot from R code:\n\n(def plot1\n  (r \"(ggplot(mpg, aes(cty, hwy, color=factor(cyl)))\n         + geom_point()\n         + stat_smooth(method=\\\"lm\\\")\n         + facet_wrap(~cyl))\"))\n\nRendering as SVG:\n\n(-&gt; plot1\n    plotting/plot-&gt;svg\n    kind/html)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n\n\n\n\n  \n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n\n\n\n\n\n\n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n\n\n\n\n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n\n\n\n\n\n\n  \n  \n  \n\n\n  \n  \n  \n\n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n\n\nRendering as a bitmap image:\n\n(-&gt; plot1\n    plotting/plot-&gt;buffered-image)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Using ggplot Clojure using ClojisR</span>"
    ]
  },
  {
    "objectID": "using_clojisr.html#plotting-by-calling-generated-r-code",
    "href": "using_clojisr.html#plotting-by-calling-generated-r-code",
    "title": "3  Using ggplot Clojure using ClojisR",
    "section": "3.3 Plotting by calling generated R code",
    "text": "3.3 Plotting by calling generated R code\nWe may also plot by generating the R code from a Clojure form.\nLet us require ggplot as a Clojure namespace.\n\n(r/require-r '[ggplot2 :as gg])\n\n\nnil\n\nNow we can plot using code generation:\n\n(-&gt; (r/r+ (gg/ggplot gg/mpg\n                     (gg/aes :x 'cty\n                             :y 'hwy\n                             :color '(factor cyl)))\n          (gg/geom_point)\n          (gg/stat_smooth :method \"lm\")\n          (gg/facet_wrap '(tilde . cyl)))\n    r\n    plotting/plot-&gt;svg\n    kind/html)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Using ggplot Clojure using ClojisR</span>"
    ]
  },
  {
    "objectID": "using_clojisr.html#plotting-by-calling-generated-r-code-with-clojure-data",
    "href": "using_clojisr.html#plotting-by-calling-generated-r-code-with-clojure-data",
    "title": "3  Using ggplot Clojure using ClojisR",
    "section": "3.4 Plotting by calling generated R code with Clojure data",
    "text": "3.4 Plotting by calling generated R code with Clojure data\nWe may further use ClojisR’s code generation with Clojure data.\nLet us read the same mpg dataset. We have it in the metamorph.ml package.\n\nsource: projects/datavis/ggplot/notebooks/using_clojisr.clj",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Using ggplot Clojure using ClojisR</span>"
    ]
  },
  {
    "objectID": "repesenting.html",
    "href": "repesenting.html",
    "title": "4  Representing ggplot plots as Clojure data",
    "section": "",
    "text": "4.1 Setup\nWe will use ClojisR to call R from Clojure.\nLoading ggplot2:\nRequireing the base R library as a Clojure namespace:",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Representing ggplot plots as Clojure data</span>"
    ]
  },
  {
    "objectID": "repesenting.html#setup",
    "href": "repesenting.html#setup",
    "title": "4  Representing ggplot plots as Clojure data",
    "section": "",
    "text": "(ns repesenting\n  (:require [clojisr.v1.r :as r :refer [r r$ r-&gt;clj]]\n            [clojisr.v1.applications.plotting :as plotting]\n            [scicloj.kindly.v4.kind :as kind]\n            [clojure.walk :as walk]\n            [tablecloth.api :as tc]\n            [editscript.core :as editscript]\n            [clojure.pprint :as pp]\n            [clojure.string :as str]))\n\n\n\n(r/library \"ggplot2\")\n\n\n[1] \"ggplot2\"   \"Rserve\"    \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    \n[7] \"datasets\"  \"methods\"   \"base\"     \n\n\n\n\n(r/require-r '[base])\n\n\nnil",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Representing ggplot plots as Clojure data</span>"
    ]
  },
  {
    "objectID": "repesenting.html#an-example-plot",
    "href": "repesenting.html#an-example-plot",
    "title": "4  Representing ggplot plots as Clojure data",
    "section": "4.2 An example plot",
    "text": "4.2 An example plot\nHere is how we may generate and display a plot:\n\n(-&gt; \"(ggplot(mpg, aes(cty, hwy, color=factor(cyl)))\n         + geom_point()\n         + stat_smooth(method=\\\"lm\\\")\n         + facet_wrap(~cyl))\"\n    r\n    plotting/plot-&gt;svg\n    kind/html)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n\n\n\n\n  \n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n\n\n\n\n\n\n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n\n\n\n\n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n\n\n\n\n\n\n  \n  \n  \n\n\n  \n  \n  \n\n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n\n\nWe may also generate the R code from a Clojure form and pass Clojure data to R, but for now, we are simply using R code using an R dataset.\nWe are using the mpg dataset, which is part of the ggplot package.\n\n(-&gt; \"mpg\"\n    r\n    r-&gt;clj)\n\n_unnamed [234 11]:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:manufacturer\n:model\n:displ\n:year\n:cyl\n:trans\n:drv\n:cty\n:hwy\n:fl\n:class\n\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\naudi\na4\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\ncompact\n\n\naudi\na4\n3.1\n2008\n6\nauto(av)\nf\n18\n27\np\ncompact\n\n\naudi\na4 quattro\n1.8\n1999\n4\nmanual(m5)\n4\n18\n26\np\ncompact\n\n\naudi\na4 quattro\n1.8\n1999\n4\nauto(l5)\n4\n16\n25\np\ncompact\n\n\naudi\na4 quattro\n2.0\n2008\n4\nmanual(m6)\n4\n20\n28\np\ncompact\n\n\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n\n\nvolkswagen\nnew beetle\n2.0\n1999\n4\nmanual(m5)\nf\n21\n29\nr\nsubcompact\n\n\nvolkswagen\nnew beetle\n2.0\n1999\n4\nauto(l4)\nf\n19\n26\nr\nsubcompact\n\n\nvolkswagen\nnew beetle\n2.5\n2008\n5\nmanual(m5)\nf\n20\n28\nr\nsubcompact\n\n\nvolkswagen\nnew beetle\n2.5\n2008\n5\nauto(s6)\nf\n20\n29\nr\nsubcompact\n\n\nvolkswagen\npassat\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\nmidsize\n\n\nvolkswagen\npassat\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\nmidsize\n\n\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Representing ggplot plots as Clojure data</span>"
    ]
  },
  {
    "objectID": "repesenting.html#representing-plots-as-clojure-data",
    "href": "repesenting.html#representing-plots-as-clojure-data",
    "title": "4  Representing ggplot plots as Clojure data",
    "section": "4.3 Representing plots as Clojure data",
    "text": "4.3 Representing plots as Clojure data\nA ggplot object is an R list of ggproto objects. We recursively unwrap this structure and convert it to Clojure.\n\n(defn ggplot-&gt;clj\n  ([r-obj]\n   (ggplot-&gt;clj r-obj {} []))\n  ([r-obj\n    {:as options\n     :keys [avoid]\n     :or {avoid #{\"plot_env\"}}}\n    path]\n   #_(prn path)\n   (let [relevant-names (some-&gt;&gt; r-obj\n                                 r.base/names\n                                 r-&gt;clj\n                                 (filter (complement avoid)))]\n     (cond\n       ;;\n       ;; a named list or a ggproto object\n       (seq relevant-names) (-&gt;&gt; relevant-names\n                                 (map (fn [nam]\n                                        [(keyword nam) (-&gt; r-obj\n                                                           (r$ nam)\n                                                           (ggplot-&gt;clj options\n                                                                        (conj path nam)))]))\n                                 (into {}))\n       ;;\n       ;; a ggproto method\n       (-&gt; r-obj\n           r.base/class\n           r-&gt;clj\n           first\n           (= \"ggproto_method\"))\n       :ggproto-method\n       ;;\n       ;; an unnamed list\n       (-&gt; r-obj\n           r.base/is-list\n           r-&gt;clj\n           first)\n       (-&gt; r-obj\n           r.base/length\n           r-&gt;clj\n           first\n           range\n           (-&gt;&gt; (mapv (fn [i]\n                        (-&gt; r-obj\n                            (r/brabra (inc i))\n                            (ggplot-&gt;clj options\n                                         (conj path [i])))))))\n       ;;\n       (r.base/is-atomic r-obj) (try (r-&gt;clj r-obj)\n                                     (catch Exception e\n                                       (-&gt; r-obj println with-out-str)))\n       :else r-obj))))\n\nIn the conversion, we avoid some big parts of the structure, e.g., the \"plot_env\" member. We also do no report the toplevel \"data\" member, which is simply the dataset.\nFor example:\n\n(-&gt; \"(ggplot(mpg, aes(cty, hwy))\n         + geom_point())\"\n    r\n    ggplot-&gt;clj\n    (dissoc :data))\n\n\n{:layers\n [{:aes_params [],\n   :stat {:compute_layer :ggproto-method, :super :ggproto-method},\n   :show.legend [nil],\n   :mapping nil,\n   :super :ggproto-method,\n   :inherit.aes [true],\n   :geom_params {:na.rm [false]},\n   :geom\n   {:non_missing_aes [\"size\" \"shape\" \"colour\"],\n    :draw_key :ggproto-method,\n    :default_aes\n    {:shape [19.0],\n     :colour [\"black\"],\n     :size [1.5],\n     :fill [nil],\n     :alpha [nil],\n     :stroke [0.5]},\n    :super :ggproto-method,\n    :required_aes [\"x\" \"y\"],\n    :draw_panel :ggproto-method},\n   :stat_params {:na.rm [false]},\n   :constructor [geom_point],\n   :position {:compute_layer :ggproto-method, :super :ggproto-method},\n   :data []}],\n :scales {:scales [], :super :ggproto-method},\n :mapping {:x [~ cty], :y [~ hwy]},\n :theme [],\n :coordinates\n {:expand [true],\n  :clip [\"on\"],\n  :limits {:x nil, :y nil},\n  :super :ggproto-method,\n  :default [true]},\n :facet {:shrink [true], :super :ggproto-method},\n :labels {:x [\"cty\"], :y [\"hwy\"]}}",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Representing ggplot plots as Clojure data</span>"
    ]
  },
  {
    "objectID": "repesenting.html#exlploring-a-few-plots",
    "href": "repesenting.html#exlploring-a-few-plots",
    "title": "4  Representing ggplot plots as Clojure data",
    "section": "4.4 Exlploring a few plots",
    "text": "4.4 Exlploring a few plots\nLet us explore and compare a few plots this way:\n\n(defn h3 [title] (kind/hiccup [:h3 title]))\n\n\n(defn h4 [title] (kind/hiccup [:h4 title]))\n\n\n(defn ggplot-summary\n  ([title r-code]\n   (ggplot-summary r-code))\n  ([title r-code prev-clj-to-compare]\n   (let [plot (r r-code)\n         clj (-&gt; plot\n                 ggplot-&gt;clj\n                 (dissoc :data))]\n     {:title title\n      :r-code r-code\n      :image (plotting/plot-&gt;buffered-image plot)\n      :clj clj\n      :diff (when prev-clj-to-compare\n              (-&gt; prev-clj-to-compare\n                  (editscript/diff clj)\n                  pp/pprint\n                  with-out-str\n                  (str/replace #\": \" \":_ \")\n                  read-string))})))\n\n\n(defn view-summary [{:keys [title r-code image clj diff]}]\n  (kind/fragment\n   [(h3 title)\n    (h4 \"R code\")\n    (kind/md\n     (format \"\\n```\\n%s\\n```\\n\"\n             r-code))\n    (h4 \"plot\")\n    image\n    (h4 \"clj data\")\n    clj\n    (when diff\n      (kind/fragment\n       [(h4 \"clj diff with previous\")\n        diff]))]))\n\n\n(-&gt;&gt; [;;\n      [\"A scatterplot\"\n       \"(ggplot(mpg, aes(cty, hwy))\n         + geom_point())\"]\n      ;;\n      [\"A scatterplot with colours\"\n       \"(ggplot(mpg, aes(cty, hwy, color=factor(cyl)))\n         + geom_point())\"]\n      ;;\n      [\"A scatterplot with colours and smoothing\"\n       \"(ggplot(mpg, aes(cty, hwy, color=factor(cyl)))\n         + geom_point()\n         + stat_smooth(method=\\\"lm\\\"))\"]\n      ;;\n      [\"A scatterplot with colours, smoothing, and facets\"\n       \"(ggplot(mpg, aes(cty, hwy, color=factor(cyl)))\n         + geom_point()\n         + stat_smooth(method=\\\"lm\\\")\n         + facet_wrap(~cyl))\"]]\n     (reductions (fn [prev-summary [title r-code]]\n                   (ggplot-summary title\n                                   r-code\n                                   (:clj prev-summary)))\n                 nil)\n     rest\n     (map view-summary)\n     kind/fragment)\n\nA scatterplot\nR code\n(ggplot(mpg, aes(cty, hwy))\n         + geom_point())\nplot\n\nclj data\n\n{:layers\n [{:aes_params [],\n   :stat {:compute_layer :ggproto-method, :super :ggproto-method},\n   :show.legend [nil],\n   :mapping nil,\n   :super :ggproto-method,\n   :inherit.aes [true],\n   :geom_params {:na.rm [false]},\n   :geom\n   {:non_missing_aes [\"size\" \"shape\" \"colour\"],\n    :draw_key :ggproto-method,\n    :default_aes\n    {:shape [19.0],\n     :colour [\"black\"],\n     :size [1.5],\n     :fill [nil],\n     :alpha [nil],\n     :stroke [0.5]},\n    :super :ggproto-method,\n    :required_aes [\"x\" \"y\"],\n    :draw_panel :ggproto-method},\n   :stat_params {:na.rm [false]},\n   :constructor [geom_point],\n   :position {:compute_layer :ggproto-method, :super :ggproto-method},\n   :data []}],\n :scales {:scales [], :super :ggproto-method},\n :mapping {:x [~ cty], :y [~ hwy]},\n :theme [],\n :coordinates\n {:expand [true],\n  :clip [\"on\"],\n  :limits {:x nil, :y nil},\n  :super :ggproto-method,\n  :default [true]},\n :facet {:shrink [true], :super :ggproto-method},\n :labels {:x [\"cty\"], :y [\"hwy\"]}}\n\nA scatterplot with colours\nR code\n(ggplot(mpg, aes(cty, hwy, color=factor(cyl)))\n         + geom_point())\nplot\n\nclj data\n\n{:layers\n [{:aes_params [],\n   :stat {:compute_layer :ggproto-method, :super :ggproto-method},\n   :show.legend [nil],\n   :mapping nil,\n   :super :ggproto-method,\n   :inherit.aes [true],\n   :geom_params {:na.rm [false]},\n   :geom\n   {:non_missing_aes [\"size\" \"shape\" \"colour\"],\n    :draw_key :ggproto-method,\n    :default_aes\n    {:shape [19.0],\n     :colour [\"black\"],\n     :size [1.5],\n     :fill [nil],\n     :alpha [nil],\n     :stroke [0.5]},\n    :super :ggproto-method,\n    :required_aes [\"x\" \"y\"],\n    :draw_panel :ggproto-method},\n   :stat_params {:na.rm [false]},\n   :constructor [geom_point],\n   :position {:compute_layer :ggproto-method, :super :ggproto-method},\n   :data []}],\n :scales {:scales [], :super :ggproto-method},\n :mapping {:x [~ cty], :y [~ hwy], :colour [~ [factor cyl]]},\n :theme [],\n :coordinates\n {:expand [true],\n  :clip [\"on\"],\n  :limits {:x nil, :y nil},\n  :super :ggproto-method,\n  :default [true]},\n :facet {:shrink [true], :super :ggproto-method},\n :labels {:x [\"cty\"], :y [\"hwy\"], :colour [\"factor(cyl)\"]}}\n\nclj diff with previous\n\n[[[:mapping :colour] :+ [~[factor cyl]]]\n [[:labels :colour] :+ [\"factor(cyl)\"]]]\n\nA scatterplot with colours and smoothing\nR code\n(ggplot(mpg, aes(cty, hwy, color=factor(cyl)))\n         + geom_point()\n         + stat_smooth(method=\"lm\"))\nplot\n\nclj data\n\n{:layers\n [{:aes_params [],\n   :stat {:compute_layer :ggproto-method, :super :ggproto-method},\n   :show.legend [nil],\n   :mapping nil,\n   :super :ggproto-method,\n   :inherit.aes [true],\n   :geom_params {:na.rm [false]},\n   :geom\n   {:non_missing_aes [\"size\" \"shape\" \"colour\"],\n    :draw_key :ggproto-method,\n    :default_aes\n    {:shape [19.0],\n     :colour [\"black\"],\n     :size [1.5],\n     :fill [nil],\n     :alpha [nil],\n     :stroke [0.5]},\n    :super :ggproto-method,\n    :required_aes [\"x\" \"y\"],\n    :draw_panel :ggproto-method},\n   :stat_params {:na.rm [false]},\n   :constructor [geom_point],\n   :position {:compute_layer :ggproto-method, :super :ggproto-method},\n   :data []}\n  {:aes_params [],\n   :stat\n   {:extra_params [\"na.rm\" \"orientation\"],\n    :super :ggproto-method,\n    :compute_group :ggproto-method,\n    :required_aes [\"x\" \"y\"],\n    :setup_params :ggproto-method,\n    :dropped_aes [\"weight\"]},\n   :show.legend [nil],\n   :mapping nil,\n   :super :ggproto-method,\n   :inherit.aes [true],\n   :geom_params {:se [true], :na.rm [false], :orientation [nil]},\n   :geom\n   {:setup_params :ggproto-method,\n    :super :ggproto-method,\n    :draw_key :ggproto-method,\n    :extra_params [\"na.rm\" \"orientation\"],\n    :required_aes [\"x\" \"y\"],\n    :draw_group :ggproto-method,\n    :optional_aes [\"ymin\" \"ymax\"],\n    :rename_size [true],\n    :setup_data :ggproto-method,\n    :default_aes\n    {:colour [\"#3366FF\"],\n     :fill [\"grey60\"],\n     :linewidth [1.0],\n     :linetype [1.0],\n     :weight [1.0],\n     :alpha [0.4]}},\n   :stat_params\n   {:na.rm [false],\n    :method [\"lm\"],\n    :n [80.0],\n    :orientation [nil],\n    :level [0.95],\n    :fullrange [false],\n    :se [true],\n    :formula nil,\n    :method.args [],\n    :span [0.75]},\n   :constructor {: nil, :method [\"lm\"]},\n   :position {:compute_layer :ggproto-method, :super :ggproto-method},\n   :data []}],\n :scales {:scales [], :super :ggproto-method},\n :mapping {:x [~ cty], :y [~ hwy], :colour [~ [factor cyl]]},\n :theme [],\n :coordinates\n {:expand [true],\n  :clip [\"on\"],\n  :limits {:x nil, :y nil},\n  :super :ggproto-method,\n  :default [true]},\n :facet {:shrink [true], :super :ggproto-method},\n :labels {:x [\"cty\"], :y [\"hwy\"], :colour [\"factor(cyl)\"]}}\n\nclj diff with previous\n\n[[[:layers 1]\n  :+\n  {:aes_params [],\n   :stat\n   {:extra_params [\"na.rm\" \"orientation\"],\n    :super :ggproto-method,\n    :compute_group :ggproto-method,\n    :required_aes [\"x\" \"y\"],\n    :setup_params :ggproto-method,\n    :dropped_aes [\"weight\"]},\n   :show.legend [nil],\n   :mapping nil,\n   :super :ggproto-method,\n   :inherit.aes [true],\n   :geom_params {:se [true], :na.rm [false], :orientation [nil]},\n   :geom\n   {:setup_params :ggproto-method,\n    :super :ggproto-method,\n    :draw_key :ggproto-method,\n    :extra_params [\"na.rm\" \"orientation\"],\n    :required_aes [\"x\" \"y\"],\n    :draw_group :ggproto-method,\n    :optional_aes [\"ymin\" \"ymax\"],\n    :rename_size [true],\n    :setup_data :ggproto-method,\n    :default_aes\n    {:colour [\"#3366FF\"],\n     :fill [\"grey60\"],\n     :linewidth [1.0],\n     :linetype [1.0],\n     :weight [1.0],\n     :alpha [0.4]}},\n   :stat_params\n   {:na.rm [false],\n    :method [\"lm\"],\n    :n [80.0],\n    :orientation [nil],\n    :level [0.95],\n    :fullrange [false],\n    :se [true],\n    :formula nil,\n    :method.args [],\n    :span [0.75]},\n   :constructor {:_ nil, :method [\"lm\"]},\n   :position {:compute_layer :ggproto-method, :super :ggproto-method},\n   :data []}]]\n\nA scatterplot with colours, smoothing, and facets\nR code\n(ggplot(mpg, aes(cty, hwy, color=factor(cyl)))\n         + geom_point()\n         + stat_smooth(method=\"lm\")\n         + facet_wrap(~cyl))\nplot\n\nclj data\n\n{:layers\n [{:aes_params [],\n   :stat {:compute_layer :ggproto-method, :super :ggproto-method},\n   :show.legend [nil],\n   :mapping nil,\n   :super :ggproto-method,\n   :inherit.aes [true],\n   :geom_params {:na.rm [false]},\n   :geom\n   {:non_missing_aes [\"size\" \"shape\" \"colour\"],\n    :draw_key :ggproto-method,\n    :default_aes\n    {:shape [19.0],\n     :colour [\"black\"],\n     :size [1.5],\n     :fill [nil],\n     :alpha [nil],\n     :stroke [0.5]},\n    :super :ggproto-method,\n    :required_aes [\"x\" \"y\"],\n    :draw_panel :ggproto-method},\n   :stat_params {:na.rm [false]},\n   :constructor [geom_point],\n   :position {:compute_layer :ggproto-method, :super :ggproto-method},\n   :data []}\n  {:aes_params [],\n   :stat\n   {:extra_params [\"na.rm\" \"orientation\"],\n    :super :ggproto-method,\n    :compute_group :ggproto-method,\n    :required_aes [\"x\" \"y\"],\n    :setup_params :ggproto-method,\n    :dropped_aes [\"weight\"]},\n   :show.legend [nil],\n   :mapping nil,\n   :super :ggproto-method,\n   :inherit.aes [true],\n   :geom_params {:se [true], :na.rm [false], :orientation [nil]},\n   :geom\n   {:setup_params :ggproto-method,\n    :super :ggproto-method,\n    :draw_key :ggproto-method,\n    :extra_params [\"na.rm\" \"orientation\"],\n    :required_aes [\"x\" \"y\"],\n    :draw_group :ggproto-method,\n    :optional_aes [\"ymin\" \"ymax\"],\n    :rename_size [true],\n    :setup_data :ggproto-method,\n    :default_aes\n    {:colour [\"#3366FF\"],\n     :fill [\"grey60\"],\n     :linewidth [1.0],\n     :linetype [1.0],\n     :weight [1.0],\n     :alpha [0.4]}},\n   :stat_params\n   {:na.rm [false],\n    :method [\"lm\"],\n    :n [80.0],\n    :orientation [nil],\n    :level [0.95],\n    :fullrange [false],\n    :se [true],\n    :formula nil,\n    :method.args [],\n    :span [0.75]},\n   :constructor {: nil, :method [\"lm\"]},\n   :position {:compute_layer :ggproto-method, :super :ggproto-method},\n   :data []}],\n :scales {:scales [], :super :ggproto-method},\n :mapping {:x [~ cty], :y [~ hwy], :colour [~ [factor cyl]]},\n :theme [],\n :coordinates\n {:expand [true],\n  :clip [\"on\"],\n  :limits {:x nil, :y nil},\n  :super :ggproto-method,\n  :default [true]},\n :facet\n {:params\n  {:dir [\"h\"],\n   :nrow nil,\n   :as.table [true],\n   :free {:x [false], :y [false]},\n   :drop [true],\n   :strip.position [\"top\"],\n   :ncol nil,\n   :facets {:cyl [~ cyl]},\n   :labeller\n   \"function (labels, multi_line = TRUE) \\n{\\n    labels &lt;- lapply(labels, as.character)\\n    if (multi_line) {\\n        labels\\n    }\\n    else {\\n        collapse_labels_lines(labels)\\n    }\\n}\\n&lt;bytecode: 0x55de132d0148&gt;\\n&lt;environment: namespace:ggplot2&gt;\\nattr(,\\\"class\\\")\\n[1] \\\"function\\\" \\\"labeller\\\"\\n\"},\n  :shrink [true],\n  :super :ggproto-method},\n :labels {:x [\"cty\"], :y [\"hwy\"], :colour [\"factor(cyl)\"]}}\n\nclj diff with previous\n\n[[[:facet :params]\n  :+\n  {:dir [\"h\"],\n   :nrow nil,\n   :as.table [true],\n   :free {:x [false], :y [false]},\n   :drop [true],\n   :strip.position [\"top\"],\n   :ncol nil,\n   :facets {:cyl [~cyl]},\n   :labeller\n   \"function (labels, multi_line = TRUE) \\n{\\n    labels &lt;- lapply(labels, as.character)\\n    if (multi_line) {\\n        labels\\n    }\\n    else {\\n        collapse_labels_lines(labels)\\n    }\\n}\\n&lt;bytecode:_ 0x55de132d0148&gt;\\n&lt;environment:_ namespace:ggplot2&gt;\\nattr(,\\\"class\\\")\\n[1] \\\"function\\\" \\\"labeller\\\"\\n\"}]]",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Representing ggplot plots as Clojure data</span>"
    ]
  },
  {
    "objectID": "repesenting.html#exploring",
    "href": "repesenting.html#exploring",
    "title": "4  Representing ggplot plots as Clojure data",
    "section": "4.5 Exploring",
    "text": "4.5 Exploring\n\n(-&gt; \"(ggplot(mpg, aes(cty, hwy)))\"\n    r\n    ggplot-&gt;clj\n    (dissoc :data))\n\n\n{:layers [],\n :scales {:super :ggproto-method},\n :mapping {:x [~ cty], :y [~ hwy]},\n :theme [],\n :coordinates\n {:expand [true],\n  :clip [\"on\"],\n  :limits {:x nil, :y nil},\n  :super :ggproto-method,\n  :default [true]},\n :facet {:shrink [true], :super :ggproto-method},\n :labels {:x [\"cty\"], :y [\"hwy\"]}}\n\n\n(-&gt; \"(ggplot(mpg, aes(cty, hwy)))\"\n    r\n    ggplot-&gt;clj\n    (dissoc :data))\n\n\n{:layers [],\n :scales {:super :ggproto-method},\n :mapping {:x [~ cty], :y [~ hwy]},\n :theme [],\n :coordinates\n {:expand [true],\n  :clip [\"on\"],\n  :limits {:x nil, :y nil},\n  :super :ggproto-method,\n  :default [true]},\n :facet {:shrink [true], :super :ggproto-method},\n :labels {:x [\"cty\"], :y [\"hwy\"]}}\n\n\n(-&gt; \"(ggplot(mpg, mapping=aes(x=cty, y=hwy)))\"\n    r\n    ggplot-&gt;clj\n    (dissoc :data))\n\n\n{:layers [],\n :scales {:super :ggproto-method},\n :mapping {:x [~ cty], :y [~ hwy]},\n :theme [],\n :coordinates\n {:expand [true],\n  :clip [\"on\"],\n  :limits {:x nil, :y nil},\n  :super :ggproto-method,\n  :default [true]},\n :facet {:shrink [true], :super :ggproto-method},\n :labels {:x [\"cty\"], :y [\"hwy\"]}}\n\n\n(-&gt; \"(ggplot(mpg, mapping=aes(x=cty, y=hwy))\n      + geom_point(mapping=aes(color=cyl), size=5)\n      + ylim(c(20,30)))\"\n    r\n    ggplot-&gt;clj\n    (dissoc :data))\n\n\n{:layers\n [{:aes_params {:size [5.0]},\n   :stat {:compute_layer :ggproto-method, :super :ggproto-method},\n   :show.legend [nil],\n   :mapping {:colour [~ cyl]},\n   :super :ggproto-method,\n   :inherit.aes [true],\n   :geom_params {:na.rm [false]},\n   :geom\n   {:non_missing_aes [\"size\" \"shape\" \"colour\"],\n    :draw_key :ggproto-method,\n    :default_aes\n    {:shape [19.0],\n     :colour [\"black\"],\n     :size [1.5],\n     :fill [nil],\n     :alpha [nil],\n     :stroke [0.5]},\n    :super :ggproto-method,\n    :required_aes [\"x\" \"y\"],\n    :draw_panel :ggproto-method},\n   :stat_params {:na.rm [false]},\n   :constructor {: nil, :mapping {: nil, :color cyl}, :size [5.0]},\n   :position {:compute_layer :ggproto-method, :super :ggproto-method},\n   :data []}],\n :scales\n {:scales\n  [{:labels [],\n    :scale_name [\"position_c\"],\n    :breaks [],\n    :call\n    {:labels labels,\n     :scale_name [\"position_c\"],\n     :breaks breaks,\n     :name name,\n     :palette identity,\n     :super ScaleContinuousPosition,\n     :guide guide,\n     :minor_breaks minor_breaks,\n     :n.breaks n.breaks,\n     : nil,\n     :aesthetics [$ ggplot_global y_aes],\n     :na.value na.value,\n     :trans trans,\n     :oob oob,\n     :position position,\n     :limits limits,\n     :expand expand},\n    :rescaler :ggproto-method,\n    :name [],\n    :palette :ggproto-method,\n    :super :ggproto-method,\n    :guide [],\n    :minor_breaks [],\n    :n.breaks nil,\n    :aesthetics\n    [\"y\"\n     \"ymin\"\n     \"ymax\"\n     \"yend\"\n     \"yintercept\"\n     \"ymin_final\"\n     \"ymax_final\"\n     \"lower\"\n     \"middle\"\n     \"upper\"\n     \"y0\"],\n    :na.value [nil],\n    :trans\n    {:name [\"identity\"],\n     :transform\n     \"function (x) \\nx\\n&lt;bytecode: 0x55de0f7b0140&gt;\\n&lt;environment: namespace:base&gt;\\n\",\n     :inverse\n     \"function (x) \\nx\\n&lt;bytecode: 0x55de0f7b0140&gt;\\n&lt;environment: namespace:base&gt;\\n\",\n     :breaks\n     \"function (x, n = n_default) \\n{\\n    x &lt;- x[is.finite(x)]\\n    if (length(x) == 0) {\\n        return(numeric())\\n    }\\n    rng &lt;- range(x)\\n    labeling::extended(rng[1], rng[2], n, ...)\\n}\\n&lt;bytecode: 0x55de136ff278&gt;\\n&lt;environment: 0x55de1aecfde8&gt;\\n\",\n     :minor_breaks\n     \"function (b, limits, n) \\n{\\n    b &lt;- b[!is.na(b)]\\n    if (length(b) &lt; 2) {\\n        return()\\n    }\\n    bd &lt;- diff(b)[1]\\n    if (!reverse) {\\n        if (min(limits) &lt; min(b)) \\n            b &lt;- c(b[1] - bd, b)\\n        if (max(limits) &gt; max(b)) \\n            b &lt;- c(b, b[length(b)] + bd)\\n    }\\n    else {\\n        if (max(limits) &gt; max(b)) \\n            b &lt;- c(b[1] - bd, b)\\n        if (min(limits) &lt; min(b)) \\n            b &lt;- c(b, b[length(b)] + bd)\\n    }\\n    seq_between &lt;- function(a, b) {\\n        seq(a, b, length.out = n + 1)[-(n + 1)]\\n    }\\n    breaks &lt;- unlist(Map(seq_between, b[-length(b)], b[-1]))\\n    breaks &lt;- c(breaks, b[length(b)])\\n    breaks\\n}\\n&lt;bytecode: 0x55de13704b78&gt;\\n&lt;environment: 0x55de1aecff70&gt;\\n\",\n     :format\n     \"function (x) \\n{\\n    if (!is.null(names(x))) {\\n        return(names(x))\\n    }\\n    ret &lt;- format(x, ..., trim = TRUE, justify = \\\"left\\\")\\n    ret[is.na(x)] &lt;- NA\\n    ret\\n}\\n&lt;bytecode: 0x55de137081a0&gt;\\n&lt;environment: 0x55de1aed00c0&gt;\\n\",\n     :domain [##-Inf ##Inf]},\n    :oob :ggproto-method,\n    :position [\"left\"],\n    :limits [20.0 30.0],\n    :expand [],\n    :range {:super :ggproto-method}}],\n  :super :ggproto-method},\n :mapping {:x [~ cty], :y [~ hwy]},\n :theme [],\n :coordinates\n {:expand [true],\n  :clip [\"on\"],\n  :limits {:x nil, :y nil},\n  :super :ggproto-method,\n  :default [true]},\n :facet {:shrink [true], :super :ggproto-method},\n :labels {:x [\"cty\"], :y [\"hwy\"], :colour [\"cyl\"]}}\n\n\n(-&gt; \"(ggplot(mpg, mapping=aes(x=cty, y=hwy))\n      + geom_point(mapping=aes(color=factor(cyl)), size=20))\"\n    r\n    plotting/plot-&gt;buffered-image)\n\n\n\n(-&gt; \"(ggplot(mpg, mapping=aes(x=cty, y=hwy))\n      + geom_point(mapping=aes(color=cyl), size=5)\n      + ylim(c(20,30))\n      + scale_x_log10())\"\n    r\n    ggplot-&gt;clj\n    (dissoc :data))\n\n\n{:layers\n [{:aes_params {:size [5.0]},\n   :stat {:compute_layer :ggproto-method, :super :ggproto-method},\n   :show.legend [nil],\n   :mapping {:colour [~ cyl]},\n   :super :ggproto-method,\n   :inherit.aes [true],\n   :geom_params {:na.rm [false]},\n   :geom\n   {:non_missing_aes [\"size\" \"shape\" \"colour\"],\n    :draw_key :ggproto-method,\n    :default_aes\n    {:shape [19.0],\n     :colour [\"black\"],\n     :size [1.5],\n     :fill [nil],\n     :alpha [nil],\n     :stroke [0.5]},\n    :super :ggproto-method,\n    :required_aes [\"x\" \"y\"],\n    :draw_panel :ggproto-method},\n   :stat_params {:na.rm [false]},\n   :constructor {: nil, :mapping {: nil, :color cyl}, :size [5.0]},\n   :position {:compute_layer :ggproto-method, :super :ggproto-method},\n   :data []}],\n :scales\n {:scales\n  [{:range {:super :ggproto-method}, :super :ggproto-method}\n   {:labels [],\n    :scale_name [\"position_c\"],\n    :breaks [],\n    :call\n    {:labels labels,\n     :scale_name [\"position_c\"],\n     :breaks breaks,\n     :name name,\n     :palette identity,\n     :super ScaleContinuousPosition,\n     :guide guide,\n     :minor_breaks minor_breaks,\n     :n.breaks n.breaks,\n     : nil,\n     :aesthetics [$ ggplot_global x_aes],\n     :na.value na.value,\n     :trans trans,\n     :oob oob,\n     :position position,\n     :limits limits,\n     :expand expand},\n    :rescaler :ggproto-method,\n    :name [],\n    :palette :ggproto-method,\n    :super :ggproto-method,\n    :guide [],\n    :minor_breaks [],\n    :n.breaks nil,\n    :aesthetics\n    [\"x\"\n     \"xmin\"\n     \"xmax\"\n     \"xend\"\n     \"xintercept\"\n     \"xmin_final\"\n     \"xmax_final\"\n     \"xlower\"\n     \"xmiddle\"\n     \"xupper\"\n     \"x0\"],\n    :na.value [nil],\n    :trans\n    {:name [\"log-10\"],\n     :transform\n     \"function (x) \\nlog(x, base)\\n&lt;bytecode: 0x55de203785e0&gt;\\n&lt;environment: 0x55de202c9318&gt;\\n\",\n     :inverse\n     \"function (x) \\nbase^x\\n&lt;bytecode: 0x55de20378490&gt;\\n&lt;environment: 0x55de202c9318&gt;\\n\",\n     :breaks\n     \"function (x, n = n_default) \\n{\\n    raw_rng &lt;- suppressWarnings(range(x, na.rm = TRUE))\\n    if (any(!is.finite(raw_rng))) {\\n        return(numeric())\\n    }\\n    rng &lt;- log(raw_rng, base = base)\\n    min &lt;- floor(rng[1])\\n    max &lt;- ceiling(rng[2])\\n    if (max == min) {\\n        return(base^min)\\n    }\\n    by &lt;- floor((max - min)/n) + 1\\n    breaks &lt;- base^seq(min, max, by = by)\\n    relevant_breaks &lt;- base^rng[1] &lt;= breaks & breaks &lt;= base^rng[2]\\n    if (sum(relevant_breaks) &gt;= (n - 2)) {\\n        return(breaks)\\n    }\\n    while (by &gt; 1) {\\n        by &lt;- by - 1\\n        breaks &lt;- base^seq(min, max, by = by)\\n        relevant_breaks &lt;- base^rng[1] &lt;= breaks & breaks &lt;= \\n            base^rng[2]\\n        if (sum(relevant_breaks) &gt;= (n - 2)) {\\n            return(breaks)\\n        }\\n    }\\n    log_sub_breaks(rng, n = n, base = base)\\n}\\n&lt;bytecode: 0x55de20380260&gt;\\n&lt;environment: 0x55de202cf2b8&gt;\\n\",\n     :minor_breaks\n     \"function (b, limits, n) \\n{\\n    b &lt;- b[!is.na(b)]\\n    if (length(b) &lt; 2) {\\n        return()\\n    }\\n    bd &lt;- diff(b)[1]\\n    if (!reverse) {\\n        if (min(limits) &lt; min(b)) \\n            b &lt;- c(b[1] - bd, b)\\n        if (max(limits) &gt; max(b)) \\n            b &lt;- c(b, b[length(b)] + bd)\\n    }\\n    else {\\n        if (max(limits) &gt; max(b)) \\n            b &lt;- c(b[1] - bd, b)\\n        if (min(limits) &lt; min(b)) \\n            b &lt;- c(b, b[length(b)] + bd)\\n    }\\n    seq_between &lt;- function(a, b) {\\n        seq(a, b, length.out = n + 1)[-(n + 1)]\\n    }\\n    breaks &lt;- unlist(Map(seq_between, b[-length(b)], b[-1]))\\n    breaks &lt;- c(breaks, b[length(b)])\\n    breaks\\n}\\n&lt;bytecode: 0x55de13704b78&gt;\\n&lt;environment: 0x55de202cede8&gt;\\n\",\n     :format\n     \"function (x) \\n{\\n    if (!is.null(names(x))) {\\n        return(names(x))\\n    }\\n    ret &lt;- format(x, ..., trim = TRUE, justify = \\\"left\\\")\\n    ret[is.na(x)] &lt;- NA\\n    ret\\n}\\n&lt;bytecode: 0x55de137081a0&gt;\\n&lt;environment: 0x55de202cec98&gt;\\n\",\n     :domain [1.0E-100 ##Inf]},\n    :oob :ggproto-method,\n    :position [\"bottom\"],\n    :limits nil,\n    :expand [],\n    :range {:super :ggproto-method}}],\n  :super :ggproto-method},\n :mapping {:x [~ cty], :y [~ hwy]},\n :theme [],\n :coordinates\n {:expand [true],\n  :clip [\"on\"],\n  :limits {:x nil, :y nil},\n  :super :ggproto-method,\n  :default [true]},\n :facet {:shrink [true], :super :ggproto-method},\n :labels {:x [\"cty\"], :y [\"hwy\"], :colour [\"cyl\"]}}\n\n\n(-&gt; \"(ggplot(mpg, mapping=aes(x=cty, y=hwy))\n      + geom_point(mapping=aes(color=cyl), size=5)\n      + ylim(c(20,30))\n      + scale_x_log10()\n      + theme_linedraw())\"\n    r\n    ggplot-&gt;clj\n    (dissoc :data))\n\n\n{:layers\n [{:aes_params {:size [5.0]},\n   :stat {:compute_layer :ggproto-method, :super :ggproto-method},\n   :show.legend [nil],\n   :mapping {:colour [~ cyl]},\n   :super :ggproto-method,\n   :inherit.aes [true],\n   :geom_params {:na.rm [false]},\n   :geom\n   {:non_missing_aes [\"size\" \"shape\" \"colour\"],\n    :draw_key :ggproto-method,\n    :default_aes\n    {:shape [19.0],\n     :colour [\"black\"],\n     :size [1.5],\n     :fill [nil],\n     :alpha [nil],\n     :stroke [0.5]},\n    :super :ggproto-method,\n    :required_aes [\"x\" \"y\"],\n    :draw_panel :ggproto-method},\n   :stat_params {:na.rm [false]},\n   :constructor {: nil, :mapping {: nil, :color cyl}, :size [5.0]},\n   :position {:compute_layer :ggproto-method, :super :ggproto-method},\n   :data []}],\n :scales\n {:scales\n  [{:range {:super :ggproto-method}, :super :ggproto-method}\n   {:range {:super :ggproto-method}, :super :ggproto-method}],\n  :super :ggproto-method},\n :mapping {:x [~ cty], :y [~ hwy]},\n :theme\n {:axis.ticks\n  {:colour [\"black\"],\n   :linewidth [0.5],\n   :linetype nil,\n   :lineend nil,\n   :arrow [false],\n   :inherit.blank [true]},\n  :legend.justification [\"center\"],\n  :panel.grid.minor\n  {:colour nil,\n   :linewidth [0.05],\n   :linetype nil,\n   :lineend nil,\n   :arrow [false],\n   :inherit.blank [true]},\n  :strip.text.x.bottom nil,\n  :legend.key.width nil,\n  :panel.spacing.x nil,\n  :axis.text.y\n  {:hjust [1.0],\n   :family nil,\n   :inherit.blank [true],\n   :debug nil,\n   :angle nil,\n   :size nil,\n   :face nil,\n   :lineheight nil,\n   :colour nil,\n   :vjust nil,\n   :margin [0.0 2.2 0.0 0.0]},\n  :panel.ontop [false],\n  :axis.ticks.x.top nil,\n  :panel.border\n  {:fill [nil],\n   :colour [\"black\"],\n   :linewidth [1.0],\n   :linetype nil,\n   :inherit.blank [true]},\n  :legend.key.height nil,\n  :plot.caption\n  {:hjust [1.0],\n   :family nil,\n   :inherit.blank [true],\n   :debug nil,\n   :angle nil,\n   :size [0.8],\n   :face nil,\n   :lineheight nil,\n   :colour nil,\n   :vjust [1.0],\n   :margin [5.5 0.0 0.0 0.0]},\n  :panel.grid.major.y nil,\n  :panel.grid\n  {:colour [\"black\"],\n   :linewidth nil,\n   :linetype nil,\n   :lineend nil,\n   :arrow [false],\n   :inherit.blank [true]},\n  :axis.ticks.x.bottom nil,\n  :panel.grid.major.x nil,\n  :plot.tag\n  {:hjust [0.5],\n   :family nil,\n   :inherit.blank [true],\n   :debug nil,\n   :angle nil,\n   :size [1.2],\n   :face nil,\n   :lineheight nil,\n   :colour nil,\n   :vjust [0.5],\n   :margin nil},\n  :axis.text\n  {:hjust nil,\n   :family nil,\n   :inherit.blank [true],\n   :debug nil,\n   :angle nil,\n   :size [0.8],\n   :face nil,\n   :lineheight nil,\n   :colour [\"black\"],\n   :vjust nil,\n   :margin nil},\n  :axis.line.x nil,\n  :panel.spacing.y nil,\n  :legend.spacing.x nil,\n  :axis.text.x\n  {:hjust nil,\n   :family nil,\n   :inherit.blank [true],\n   :debug nil,\n   :angle nil,\n   :size nil,\n   :face nil,\n   :lineheight nil,\n   :colour nil,\n   :vjust [1.0],\n   :margin [2.2 0.0 0.0 0.0]},\n  :axis.line.y.left nil,\n  :plot.caption.position [\"panel\"],\n  :plot.subtitle\n  {:hjust [0.0],\n   :family nil,\n   :inherit.blank [true],\n   :debug nil,\n   :angle nil,\n   :size nil,\n   :face nil,\n   :lineheight nil,\n   :colour nil,\n   :vjust [1.0],\n   :margin [0.0 0.0 5.5 0.0]},\n  :axis.ticks.y.right nil,\n  :legend.box nil,\n  :strip.text.y\n  {:hjust nil,\n   :family nil,\n   :inherit.blank [true],\n   :debug nil,\n   :angle [-90.0],\n   :size nil,\n   :face nil,\n   :lineheight nil,\n   :colour nil,\n   :vjust nil,\n   :margin nil},\n  :panel.spacing [5.5],\n  :legend.background\n  {:fill nil,\n   :colour [nil],\n   :linewidth nil,\n   :linetype nil,\n   :inherit.blank [true]},\n  :strip.switch.pad.grid [2.75],\n  :axis.ticks.length.y.left nil,\n  :legend.direction nil,\n  :strip.text\n  {:hjust nil,\n   :family nil,\n   :inherit.blank [true],\n   :debug nil,\n   :angle nil,\n   :size [0.8],\n   :face nil,\n   :lineheight nil,\n   :colour [\"white\"],\n   :vjust nil,\n   :margin [4.4 4.4 4.4 4.4]},\n  :axis.line.x.bottom nil,\n  :axis.ticks.length.x.bottom nil,\n  :axis.text.y.left nil,\n  :axis.ticks.length.x nil,\n  :plot.margin [5.5 5.5 5.5 5.5],\n  :axis.ticks.length [2.75],\n  :plot.title\n  {:hjust [0.0],\n   :family nil,\n   :inherit.blank [true],\n   :debug nil,\n   :angle nil,\n   :size [1.2],\n   :face nil,\n   :lineheight nil,\n   :colour nil,\n   :vjust [1.0],\n   :margin [0.0 0.0 5.5 0.0]},\n  :axis.ticks.y nil,\n  :legend.text.align nil,\n  :legend.text\n  {:hjust nil,\n   :family nil,\n   :inherit.blank [true],\n   :debug nil,\n   :angle nil,\n   :size [0.8],\n   :face nil,\n   :lineheight nil,\n   :colour nil,\n   :vjust nil,\n   :margin nil},\n  :legend.key\n  {:fill [\"white\"],\n   :colour [nil],\n   :linewidth nil,\n   :linetype nil,\n   :inherit.blank [true]},\n  :axis.line.y nil,\n  :axis.title.y.left nil,\n  :axis.ticks.length.x.top nil,\n  :legend.box.margin [0.0 0.0 0.0 0.0],\n  :axis.title.y.right\n  {:hjust nil,\n   :family nil,\n   :inherit.blank [true],\n   :debug nil,\n   :angle [-90.0],\n   :size nil,\n   :face nil,\n   :lineheight nil,\n   :colour nil,\n   :vjust [0.0],\n   :margin [0.0 0.0 0.0 2.75]},\n  :title nil,\n  :strip.clip [\"inherit\"],\n  :strip.background.x nil,\n  :strip.text.x nil,\n  :strip.placement [\"inside\"],\n  :axis.ticks.x nil,\n  :axis.line.y.right nil,\n  :axis.title.x.bottom nil,\n  :legend.key.size [1.2],\n  :axis.text.x.top\n  {:hjust nil,\n   :family nil,\n   :inherit.blank [true],\n   :debug nil,\n   :angle nil,\n   :size nil,\n   :face nil,\n   :lineheight nil,\n   :colour nil,\n   :vjust [0.0],\n   :margin [0.0 0.0 2.2 0.0]},\n  :panel.background\n  {:fill [\"white\"],\n   :colour [nil],\n   :linewidth nil,\n   :linetype nil,\n   :inherit.blank [true]},\n  :plot.tag.position [\"topleft\"],\n  :legend.margin [5.5 5.5 5.5 5.5],\n  :plot.title.position [\"panel\"],\n  :line\n  {:colour [\"black\"],\n   :linewidth [0.5],\n   :linetype [1.0],\n   :lineend [\"butt\"],\n   :arrow [false],\n   :inherit.blank [true]},\n  :strip.text.y.left\n  {:hjust nil,\n   :family nil,\n   :inherit.blank [true],\n   :debug nil,\n   :angle [90.0],\n   :size nil,\n   :face nil,\n   :lineheight nil,\n   :colour nil,\n   :vjust nil,\n   :margin nil},\n  :strip.background\n  {:fill [\"black\"],\n   :colour nil,\n   :linewidth nil,\n   :linetype nil,\n   :inherit.blank [true]},\n  :axis.title.y\n  {:hjust nil,\n   :family nil,\n   :inherit.blank [true],\n   :debug nil,\n   :angle [90.0],\n   :size nil,\n   :face nil,\n   :lineheight nil,\n   :colour nil,\n   :vjust [1.0],\n   :margin [0.0 2.75 0.0 0.0]},\n  :legend.box.background [],\n  :panel.grid.major\n  {:colour nil,\n   :linewidth [0.1],\n   :linetype nil,\n   :lineend nil,\n   :arrow [false],\n   :inherit.blank [true]},\n  :axis.title nil,\n  :strip.text.y.right nil,\n  :legend.title.align nil,\n  :plot.background\n  {:fill nil,\n   :colour [\"white\"],\n   :linewidth nil,\n   :linetype nil,\n   :inherit.blank [true]},\n  :aspect.ratio nil,\n  :legend.spacing [11.0],\n  :axis.title.x\n  {:hjust nil,\n   :family nil,\n   :inherit.blank [true],\n   :debug nil,\n   :angle nil,\n   :size nil,\n   :face nil,\n   :lineheight nil,\n   :colour nil,\n   :vjust [1.0],\n   :margin [2.75 0.0 0.0 0.0]},\n  :axis.line.x.top nil,\n  :legend.position [\"right\"],\n  :axis.ticks.length.y nil,\n  :axis.ticks.y.left nil,\n  :axis.ticks.length.y.right nil,\n  :legend.box.just nil,\n  :legend.title\n  {:hjust [0.0],\n   :family nil,\n   :inherit.blank [true],\n   :debug nil,\n   :angle nil,\n   :size nil,\n   :face nil,\n   :lineheight nil,\n   :colour nil,\n   :vjust nil,\n   :margin nil},\n  :axis.text.y.right\n  {:hjust [0.0],\n   :family nil,\n   :inherit.blank [true],\n   :debug nil,\n   :angle nil,\n   :size nil,\n   :face nil,\n   :lineheight nil,\n   :colour nil,\n   :vjust nil,\n   :margin [0.0 0.0 0.0 2.2]},\n  :axis.text.x.bottom nil,\n  :strip.background.y nil,\n  :axis.line [],\n  :rect\n  {:fill [\"white\"],\n   :colour [\"black\"],\n   :linewidth [0.5],\n   :linetype [1.0],\n   :inherit.blank [true]},\n  :legend.box.spacing [11.0],\n  :panel.grid.minor.y nil,\n  :panel.grid.minor.x nil,\n  :strip.switch.pad.wrap [2.75],\n  :axis.title.x.top\n  {:hjust nil,\n   :family nil,\n   :inherit.blank [true],\n   :debug nil,\n   :angle nil,\n   :size nil,\n   :face nil,\n   :lineheight nil,\n   :colour nil,\n   :vjust [0.0],\n   :margin [0.0 0.0 2.75 0.0]},\n  :strip.text.x.top nil,\n  :legend.spacing.y nil,\n  :text\n  {:hjust [0.5],\n   :family [\"\"],\n   :inherit.blank [true],\n   :debug [false],\n   :angle [0.0],\n   :size [11.0],\n   :face [\"plain\"],\n   :lineheight [0.9],\n   :colour [\"black\"],\n   :vjust [0.5],\n   :margin [0.0 0.0 0.0 0.0]}},\n :coordinates\n {:expand [true],\n  :clip [\"on\"],\n  :limits {:x nil, :y nil},\n  :super :ggproto-method,\n  :default [true]},\n :facet {:shrink [true], :super :ggproto-method},\n :labels {:x [\"cty\"], :y [\"hwy\"], :colour [\"cyl\"]}}\n\n\n(-&gt; \"(ggplot(data.frame(x = rnorm(1000, 2, 2)), aes(x)) +\n      geom_histogram(aes(y=..density..)) +  # scale histogram y\n      geom_density(col = 'red', size=5))\"\n    r\n    plotting/plot-&gt;buffered-image)\n\n\n\n(-&gt; \"(ggplot(data.frame(x = rnorm(1000, 2, 2)), aes(x)) +\n      geom_histogram(aes(y=..density..)) +  # scale histogram y\n      geom_density(col = 'red'))\"\n    r\n    ggplot-&gt;clj\n    (dissoc :data))\n\n\n{:layers\n [{:aes_params [],\n   :stat\n   {:default_aes\n    {:x [~ [after_stat count]],\n     :y [~ [after_stat count]],\n     :weight [1.0]},\n    :extra_params [\"na.rm\" \"orientation\"],\n    :super :ggproto-method,\n    :compute_group :ggproto-method,\n    :required_aes [\"x|y\"],\n    :setup_params :ggproto-method,\n    :dropped_aes [\"weight\"]},\n   :show.legend [nil],\n   :mapping {:y [~ ..density..]},\n   :super :ggproto-method,\n   :inherit.aes [true],\n   :geom_params {:na.rm [false], :orientation [nil]},\n   :geom\n   {:setup_data :ggproto-method,\n    :rename_size [true],\n    :non_missing_aes [\"xmin\" \"xmax\" \"ymin\" \"ymax\"],\n    :extra_params [\"just\" \"na.rm\" \"orientation\"],\n    :super :ggproto-method,\n    :required_aes [\"x\" \"y\"],\n    :draw_panel :ggproto-method,\n    :setup_params :ggproto-method},\n   :stat_params\n   {:binwidth nil,\n    :bins nil,\n    :na.rm [false],\n    :orientation [nil],\n    :pad [false]},\n   :constructor [geom_histogram {0 aes, :y ..density..}],\n   :position\n   {:setup_data :ggproto-method,\n    :type nil,\n    :compute_panel :ggproto-method,\n    :vjust [1.0],\n    :reverse [false],\n    :super :ggproto-method,\n    :fill [false],\n    :setup_params :ggproto-method},\n   :data []}\n  {:aes_params {:colour [\"red\"]},\n   :stat\n   {:default_aes\n    {:x [~ [after_stat density]],\n     :y [~ [after_stat density]],\n     :fill [nil],\n     :weight nil},\n    :extra_params [\"na.rm\" \"orientation\"],\n    :super :ggproto-method,\n    :compute_group :ggproto-method,\n    :required_aes [\"x|y\"],\n    :setup_params :ggproto-method,\n    :dropped_aes [\"weight\"]},\n   :show.legend [nil],\n   :mapping nil,\n   :super :ggproto-method,\n   :inherit.aes [true],\n   :geom_params\n   {:na.rm [false], :orientation [nil], :outline.type [\"upper\"]},\n   :geom\n   {:default_aes\n    {:fill [nil],\n     :weight [1.0],\n     :colour [\"black\"],\n     :alpha [nil],\n     :linewidth [0.5],\n     :linetype [1.0]},\n    :super :ggproto-method},\n   :stat_params {:na.rm [false], :orientation [nil]},\n   :constructor {: nil, :col [\"red\"]},\n   :position {:compute_layer :ggproto-method, :super :ggproto-method},\n   :data []}],\n :scales {:scales [], :super :ggproto-method},\n :mapping {:x [~ x]},\n :theme [],\n :coordinates\n {:expand [true],\n  :clip [\"on\"],\n  :limits {:x nil, :y nil},\n  :super :ggproto-method,\n  :default [true]},\n :facet {:shrink [true], :super :ggproto-method},\n :labels {:x [\"x\"], :y [\"density\"], :fill [\"fill\"], :weight [\"weight\"]}}\n\n\nsource: projects/datavis/ggplot/notebooks/representing.clj",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Representing ggplot plots as Clojure data</span>"
    ]
  }
]