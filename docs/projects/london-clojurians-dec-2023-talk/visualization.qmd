
---
format:
  html: {toc: true, toc-depth: 4, theme: spacelab, output-file: visualization.html}
highlight-style: solarized

---
<style>table {
  border-style: thin;
}
th, td {
  padding: 6px;
}
td {
  text-align: left;
}
th {
  text-align: center;
  background-color: #ddd;
}
tr:nth-child(even) {
  background-color: #f6f6f6;
}
</style><style>.printedClojure .sourceCode {
  background-color: transparent;
  border-style: none;
}
</style>
<script src="visualization_files/md-default0.js" type="text/javascript"></script><script src="visualization_files/md-default1.js" type="text/javascript"></script><script src="visualization_files/vega2.js" type="text/javascript"></script><script src="visualization_files/vega3.js" type="text/javascript"></script><script src="visualization_files/vega4.js" type="text/javascript"></script>

# Visualization


<div class="sourceClojure">
```clojure
(ns visualization
  (:require [tablecloth.api :as tc]
            [aerial.hanami.common :as hc]
            [aerial.hanami.templates :as ht]
            [scicloj.noj.v1.vis.hanami.templates :as vht]
            [scicloj.noj.v1.vis :as vis]
            [scicloj.noj.v1.stats :as stats]
            [scicloj.noj.v1.datasets :as datasets]
            [tech.v3.datatype :as dtype]
            [tech.v3.datatype.functional :as fun]
            [scicloj.kindly.v4.api :as kindly]
            [scicloj.kindly.v4.kind :as kind]
            [hiccup.core :as hiccup]
            [clojure2d.color :as color]))
```
</div>



## Visualizing datases with Hanami
Noj offers a few convenience functions to make [Hanami](https://github.com/jsa-aerial/hanami) plotting work smoothly with [Tablecloth](https://scicloj.github.io/tablecloth/) and [Kindly](https://scicloj.github.io/kindly/).


<div class="sourceClojure">
```clojure
(def random-walk
  (let [n 20]
    (-> {:x (range n)
         :y (->> (repeatedly n #(- (rand) 0.5))
                 (reductions +))}
        tc/dataset)))
```
</div>



### A simple plot
We can plot a Tablecloth datasete using a Hanami template:


<div class="sourceClojure">
```clojure
(-> random-walk
    (vis/hanami-plot ht/point-chart
                     {:MSIZE 200}))
```
</div>


<div><script>vegaEmbed(document.currentScript.parentElement, {"encoding":{"y":{"field":"y","type":"quantitative"},"x":{"field":"x","type":"quantitative"}},"mark":{"type":"circle","size":200,"tooltip":true},"width":400,"background":"floralwhite","height":300,"data":{"values":"x,y\n0,-0.10891746407198855\n1,-0.17746785165549706\n2,0.010481929682169322\n3,-0.30373971592778526\n4,-0.47604808081984973\n5,-0.892613043086356\n6,-1.1415894660576191\n7,-1.3022333469107266\n8,-1.648762135975216\n9,-1.3201114922367414\n10,-1.7176056054413757\n11,-1.3492575022010356\n12,-0.8540467998730537\n13,-0.9979245662928977\n14,-1.0470624845665784\n15,-0.7440189393874057\n16,-0.3609645768215545\n17,-0.6690171277438733\n18,-0.2370752883476035\n19,-0.3441999031150036\n","format":{"type":"csv"}}});</script></div>

Let us look inside the resulting vega-lite space. We can see the dataset is included as CSV:


<div class="sourceClojure">
```clojure
(-> random-walk
    (vis/hanami-plot ht/point-chart
                     {:MSIZE 200})
    kind/pprint)
```
</div>



<div class="printedClojure">
```clojure
{:encoding
 {:y {:field "y", :type "quantitative"},
  :x {:field "x", :type "quantitative"}},
 :mark {:type "circle", :size 200, :tooltip true},
 :width 400,
 :background "floralwhite",
 :height 300,
 :data
 {:values
  "x,y\n0,-0.10891746407198855\n1,-0.17746785165549706\n2,0.010481929682169322\n3,-0.30373971592778526\n4,-0.47604808081984973\n5,-0.892613043086356\n6,-1.1415894660576191\n7,-1.3022333469107266\n8,-1.648762135975216\n9,-1.3201114922367414\n10,-1.7176056054413757\n11,-1.3492575022010356\n12,-0.8540467998730537\n13,-0.9979245662928977\n14,-1.0470624845665784\n15,-0.7440189393874057\n16,-0.3609645768215545\n17,-0.6690171277438733\n18,-0.2370752883476035\n19,-0.3441999031150036\n",
  :format {:type "csv"}}}

```
</div>


We can used Hanami temples from the namespace `[aerial.hanami.templates :as ht]'
as well as the additional templates at Noj's `[scicloj.noj.v1.vis.hanami.templates :as vht]`.


<div class="sourceClojure">
```clojure
(-> datasets/iris
    (vis/hanami-plot vht/rule-chart
                     {:X :sepal-width
                      :Y :sepal-length
                      :X2 :petal-width
                      :Y2 :petal-length
                      :OPACITY 0.2
                      :SIZE 3
                      :COLOR "species"}))
```
</div>


<div><script>vegaEmbed(document.currentScript.parentElement, {"encoding":{"y":{"field":"sepal-length","type":"quantitative"},"color":{"field":"species","type":"nominal"},"size":{"value":3},"opacity":{"value":0.2},"x":{"field":"sepal-width","type":"quantitative"},"y2":{"field":"petal-length","type":"quantitative"},"x2":{"field":"petal-width","type":"quantitative"}},"mark":"rule","width":400,"background":"floralwhite","height":300,"data":{"values":"sepal-length,sepal-width,petal-length,petal-width,species\n5.1,3.5,1.4,0.2,setosa\n4.9,3.0,1.4,0.2,setosa\n4.7,3.2,1.3,0.2,setosa\n4.6,3.1,1.5,0.2,setosa\n5.0,3.6,1.4,0.2,setosa\n5.4,3.9,1.7,0.4,setosa\n4.6,3.4,1.4,0.3,setosa\n5.0,3.4,1.5,0.2,setosa\n4.4,2.9,1.4,0.2,setosa\n4.9,3.1,1.5,0.1,setosa\n5.4,3.7,1.5,0.2,setosa\n4.8,3.4,1.6,0.2,setosa\n4.8,3.0,1.4,0.1,setosa\n4.3,3.0,1.1,0.1,setosa\n5.8,4.0,1.2,0.2,setosa\n5.7,4.4,1.5,0.4,setosa\n5.4,3.9,1.3,0.4,setosa\n5.1,3.5,1.4,0.3,setosa\n5.7,3.8,1.7,0.3,setosa\n5.1,3.8,1.5,0.3,setosa\n5.4,3.4,1.7,0.2,setosa\n5.1,3.7,1.5,0.4,setosa\n4.6,3.6,1.0,0.2,setosa\n5.1,3.3,1.7,0.5,setosa\n4.8,3.4,1.9,0.2,setosa\n5.0,3.0,1.6,0.2,setosa\n5.0,3.4,1.6,0.4,setosa\n5.2,3.5,1.5,0.2,setosa\n5.2,3.4,1.4,0.2,setosa\n4.7,3.2,1.6,0.2,setosa\n4.8,3.1,1.6,0.2,setosa\n5.4,3.4,1.5,0.4,setosa\n5.2,4.1,1.5,0.1,setosa\n5.5,4.2,1.4,0.2,setosa\n4.9,3.1,1.5,0.2,setosa\n5.0,3.2,1.2,0.2,setosa\n5.5,3.5,1.3,0.2,setosa\n4.9,3.6,1.4,0.1,setosa\n4.4,3.0,1.3,0.2,setosa\n5.1,3.4,1.5,0.2,setosa\n5.0,3.5,1.3,0.3,setosa\n4.5,2.3,1.3,0.3,setosa\n4.4,3.2,1.3,0.2,setosa\n5.0,3.5,1.6,0.6,setosa\n5.1,3.8,1.9,0.4,setosa\n4.8,3.0,1.4,0.3,setosa\n5.1,3.8,1.6,0.2,setosa\n4.6,3.2,1.4,0.2,setosa\n5.3,3.7,1.5,0.2,setosa\n5.0,3.3,1.4,0.2,setosa\n7.0,3.2,4.7,1.4,versicolor\n6.4,3.2,4.5,1.5,versicolor\n6.9,3.1,4.9,1.5,versicolor\n5.5,2.3,4.0,1.3,versicolor\n6.5,2.8,4.6,1.5,versicolor\n5.7,2.8,4.5,1.3,versicolor\n6.3,3.3,4.7,1.6,versicolor\n4.9,2.4,3.3,1.0,versicolor\n6.6,2.9,4.6,1.3,versicolor\n5.2,2.7,3.9,1.4,versicolor\n5.0,2.0,3.5,1.0,versicolor\n5.9,3.0,4.2,1.5,versicolor\n6.0,2.2,4.0,1.0,versicolor\n6.1,2.9,4.7,1.4,versicolor\n5.6,2.9,3.6,1.3,versicolor\n6.7,3.1,4.4,1.4,versicolor\n5.6,3.0,4.5,1.5,versicolor\n5.8,2.7,4.1,1.0,versicolor\n6.2,2.2,4.5,1.5,versicolor\n5.6,2.5,3.9,1.1,versicolor\n5.9,3.2,4.8,1.8,versicolor\n6.1,2.8,4.0,1.3,versicolor\n6.3,2.5,4.9,1.5,versicolor\n6.1,2.8,4.7,1.2,versicolor\n6.4,2.9,4.3,1.3,versicolor\n6.6,3.0,4.4,1.4,versicolor\n6.8,2.8,4.8,1.4,versicolor\n6.7,3.0,5.0,1.7,versicolor\n6.0,2.9,4.5,1.5,versicolor\n5.7,2.6,3.5,1.0,versicolor\n5.5,2.4,3.8,1.1,versicolor\n5.5,2.4,3.7,1.0,versicolor\n5.8,2.7,3.9,1.2,versicolor\n6.0,2.7,5.1,1.6,versicolor\n5.4,3.0,4.5,1.5,versicolor\n6.0,3.4,4.5,1.6,versicolor\n6.7,3.1,4.7,1.5,versicolor\n6.3,2.3,4.4,1.3,versicolor\n5.6,3.0,4.1,1.3,versicolor\n5.5,2.5,4.0,1.3,versicolor\n5.5,2.6,4.4,1.2,versicolor\n6.1,3.0,4.6,1.4,versicolor\n5.8,2.6,4.0,1.2,versicolor\n5.0,2.3,3.3,1.0,versicolor\n5.6,2.7,4.2,1.3,versicolor\n5.7,3.0,4.2,1.2,versicolor\n5.7,2.9,4.2,1.3,versicolor\n6.2,2.9,4.3,1.3,versicolor\n5.1,2.5,3.0,1.1,versicolor\n5.7,2.8,4.1,1.3,versicolor\n6.3,3.3,6.0,2.5,virginica\n5.8,2.7,5.1,1.9,virginica\n7.1,3.0,5.9,2.1,virginica\n6.3,2.9,5.6,1.8,virginica\n6.5,3.0,5.8,2.2,virginica\n7.6,3.0,6.6,2.1,virginica\n4.9,2.5,4.5,1.7,virginica\n7.3,2.9,6.3,1.8,virginica\n6.7,2.5,5.8,1.8,virginica\n7.2,3.6,6.1,2.5,virginica\n6.5,3.2,5.1,2.0,virginica\n6.4,2.7,5.3,1.9,virginica\n6.8,3.0,5.5,2.1,virginica\n5.7,2.5,5.0,2.0,virginica\n5.8,2.8,5.1,2.4,virginica\n6.4,3.2,5.3,2.3,virginica\n6.5,3.0,5.5,1.8,virginica\n7.7,3.8,6.7,2.2,virginica\n7.7,2.6,6.9,2.3,virginica\n6.0,2.2,5.0,1.5,virginica\n6.9,3.2,5.7,2.3,virginica\n5.6,2.8,4.9,2.0,virginica\n7.7,2.8,6.7,2.0,virginica\n6.3,2.7,4.9,1.8,virginica\n6.7,3.3,5.7,2.1,virginica\n7.2,3.2,6.0,1.8,virginica\n6.2,2.8,4.8,1.8,virginica\n6.1,3.0,4.9,1.8,virginica\n6.4,2.8,5.6,2.1,virginica\n7.2,3.0,5.8,1.6,virginica\n7.4,2.8,6.1,1.9,virginica\n7.9,3.8,6.4,2.0,virginica\n6.4,2.8,5.6,2.2,virginica\n6.3,2.8,5.1,1.5,virginica\n6.1,2.6,5.6,1.4,virginica\n7.7,3.0,6.1,2.3,virginica\n6.3,3.4,5.6,2.4,virginica\n6.4,3.1,5.5,1.8,virginica\n6.0,3.0,4.8,1.8,virginica\n6.9,3.1,5.4,2.1,virginica\n6.7,3.1,5.6,2.4,virginica\n6.9,3.1,5.1,2.3,virginica\n5.8,2.7,5.1,1.9,virginica\n6.8,3.2,5.9,2.3,virginica\n6.7,3.3,5.7,2.5,virginica\n6.7,3.0,5.2,2.3,virginica\n6.3,2.5,5.0,1.9,virginica\n6.5,3.0,5.2,2.0,virginica\n6.2,3.4,5.4,2.3,virginica\n5.9,3.0,5.1,1.8,virginica\n","format":{"type":"csv"}}});</script></div>


### Grouped datasets
Grouped datasets are handled automatically with a table view.


<div class="sourceClojure">
```clojure
(-> datasets/iris
    (tc/group-by [:species])
    (vis/hanami-plot vht/rule-chart
                     {:X :sepal-width
                      :Y :sepal-length
                      :X2 :petal-width
                      :Y2 :petal-length
                      :OPACITY 0.2
                      :SIZE 3}))
```
</div>


<table class="table"><thead><tr><th>species</th><th>plot-0</th></tr></thead><tbody><tr><td><div><p>setosa</p></div></td><td><div><script>vegaEmbed(document.currentScript.parentElement, {"encoding":{"y":{"field":"sepal-length","type":"quantitative"},"size":{"value":3},"opacity":{"value":0.2},"x":{"field":"sepal-width","type":"quantitative"},"y2":{"field":"petal-length","type":"quantitative"},"x2":{"field":"petal-width","type":"quantitative"}},"mark":"rule","width":400,"background":"floralwhite","height":300,"data":{"values":"sepal-length,sepal-width,petal-length,petal-width,species\n5.1,3.5,1.4,0.2,setosa\n4.9,3.0,1.4,0.2,setosa\n4.7,3.2,1.3,0.2,setosa\n4.6,3.1,1.5,0.2,setosa\n5.0,3.6,1.4,0.2,setosa\n5.4,3.9,1.7,0.4,setosa\n4.6,3.4,1.4,0.3,setosa\n5.0,3.4,1.5,0.2,setosa\n4.4,2.9,1.4,0.2,setosa\n4.9,3.1,1.5,0.1,setosa\n5.4,3.7,1.5,0.2,setosa\n4.8,3.4,1.6,0.2,setosa\n4.8,3.0,1.4,0.1,setosa\n4.3,3.0,1.1,0.1,setosa\n5.8,4.0,1.2,0.2,setosa\n5.7,4.4,1.5,0.4,setosa\n5.4,3.9,1.3,0.4,setosa\n5.1,3.5,1.4,0.3,setosa\n5.7,3.8,1.7,0.3,setosa\n5.1,3.8,1.5,0.3,setosa\n5.4,3.4,1.7,0.2,setosa\n5.1,3.7,1.5,0.4,setosa\n4.6,3.6,1.0,0.2,setosa\n5.1,3.3,1.7,0.5,setosa\n4.8,3.4,1.9,0.2,setosa\n5.0,3.0,1.6,0.2,setosa\n5.0,3.4,1.6,0.4,setosa\n5.2,3.5,1.5,0.2,setosa\n5.2,3.4,1.4,0.2,setosa\n4.7,3.2,1.6,0.2,setosa\n4.8,3.1,1.6,0.2,setosa\n5.4,3.4,1.5,0.4,setosa\n5.2,4.1,1.5,0.1,setosa\n5.5,4.2,1.4,0.2,setosa\n4.9,3.1,1.5,0.2,setosa\n5.0,3.2,1.2,0.2,setosa\n5.5,3.5,1.3,0.2,setosa\n4.9,3.6,1.4,0.1,setosa\n4.4,3.0,1.3,0.2,setosa\n5.1,3.4,1.5,0.2,setosa\n5.0,3.5,1.3,0.3,setosa\n4.5,2.3,1.3,0.3,setosa\n4.4,3.2,1.3,0.2,setosa\n5.0,3.5,1.6,0.6,setosa\n5.1,3.8,1.9,0.4,setosa\n4.8,3.0,1.4,0.3,setosa\n5.1,3.8,1.6,0.2,setosa\n4.6,3.2,1.4,0.2,setosa\n5.3,3.7,1.5,0.2,setosa\n5.0,3.3,1.4,0.2,setosa\n","format":{"type":"csv"}}});</script></div></td></tr><tr><td><div><p>versicolor</p></div></td><td><div><script>vegaEmbed(document.currentScript.parentElement, {"encoding":{"y":{"field":"sepal-length","type":"quantitative"},"size":{"value":3},"opacity":{"value":0.2},"x":{"field":"sepal-width","type":"quantitative"},"y2":{"field":"petal-length","type":"quantitative"},"x2":{"field":"petal-width","type":"quantitative"}},"mark":"rule","width":400,"background":"floralwhite","height":300,"data":{"values":"sepal-length,sepal-width,petal-length,petal-width,species\n7.0,3.2,4.7,1.4,versicolor\n6.4,3.2,4.5,1.5,versicolor\n6.9,3.1,4.9,1.5,versicolor\n5.5,2.3,4.0,1.3,versicolor\n6.5,2.8,4.6,1.5,versicolor\n5.7,2.8,4.5,1.3,versicolor\n6.3,3.3,4.7,1.6,versicolor\n4.9,2.4,3.3,1.0,versicolor\n6.6,2.9,4.6,1.3,versicolor\n5.2,2.7,3.9,1.4,versicolor\n5.0,2.0,3.5,1.0,versicolor\n5.9,3.0,4.2,1.5,versicolor\n6.0,2.2,4.0,1.0,versicolor\n6.1,2.9,4.7,1.4,versicolor\n5.6,2.9,3.6,1.3,versicolor\n6.7,3.1,4.4,1.4,versicolor\n5.6,3.0,4.5,1.5,versicolor\n5.8,2.7,4.1,1.0,versicolor\n6.2,2.2,4.5,1.5,versicolor\n5.6,2.5,3.9,1.1,versicolor\n5.9,3.2,4.8,1.8,versicolor\n6.1,2.8,4.0,1.3,versicolor\n6.3,2.5,4.9,1.5,versicolor\n6.1,2.8,4.7,1.2,versicolor\n6.4,2.9,4.3,1.3,versicolor\n6.6,3.0,4.4,1.4,versicolor\n6.8,2.8,4.8,1.4,versicolor\n6.7,3.0,5.0,1.7,versicolor\n6.0,2.9,4.5,1.5,versicolor\n5.7,2.6,3.5,1.0,versicolor\n5.5,2.4,3.8,1.1,versicolor\n5.5,2.4,3.7,1.0,versicolor\n5.8,2.7,3.9,1.2,versicolor\n6.0,2.7,5.1,1.6,versicolor\n5.4,3.0,4.5,1.5,versicolor\n6.0,3.4,4.5,1.6,versicolor\n6.7,3.1,4.7,1.5,versicolor\n6.3,2.3,4.4,1.3,versicolor\n5.6,3.0,4.1,1.3,versicolor\n5.5,2.5,4.0,1.3,versicolor\n5.5,2.6,4.4,1.2,versicolor\n6.1,3.0,4.6,1.4,versicolor\n5.8,2.6,4.0,1.2,versicolor\n5.0,2.3,3.3,1.0,versicolor\n5.6,2.7,4.2,1.3,versicolor\n5.7,3.0,4.2,1.2,versicolor\n5.7,2.9,4.2,1.3,versicolor\n6.2,2.9,4.3,1.3,versicolor\n5.1,2.5,3.0,1.1,versicolor\n5.7,2.8,4.1,1.3,versicolor\n","format":{"type":"csv"}}});</script></div></td></tr><tr><td><div><p>virginica</p></div></td><td><div><script>vegaEmbed(document.currentScript.parentElement, {"encoding":{"y":{"field":"sepal-length","type":"quantitative"},"size":{"value":3},"opacity":{"value":0.2},"x":{"field":"sepal-width","type":"quantitative"},"y2":{"field":"petal-length","type":"quantitative"},"x2":{"field":"petal-width","type":"quantitative"}},"mark":"rule","width":400,"background":"floralwhite","height":300,"data":{"values":"sepal-length,sepal-width,petal-length,petal-width,species\n6.3,3.3,6.0,2.5,virginica\n5.8,2.7,5.1,1.9,virginica\n7.1,3.0,5.9,2.1,virginica\n6.3,2.9,5.6,1.8,virginica\n6.5,3.0,5.8,2.2,virginica\n7.6,3.0,6.6,2.1,virginica\n4.9,2.5,4.5,1.7,virginica\n7.3,2.9,6.3,1.8,virginica\n6.7,2.5,5.8,1.8,virginica\n7.2,3.6,6.1,2.5,virginica\n6.5,3.2,5.1,2.0,virginica\n6.4,2.7,5.3,1.9,virginica\n6.8,3.0,5.5,2.1,virginica\n5.7,2.5,5.0,2.0,virginica\n5.8,2.8,5.1,2.4,virginica\n6.4,3.2,5.3,2.3,virginica\n6.5,3.0,5.5,1.8,virginica\n7.7,3.8,6.7,2.2,virginica\n7.7,2.6,6.9,2.3,virginica\n6.0,2.2,5.0,1.5,virginica\n6.9,3.2,5.7,2.3,virginica\n5.6,2.8,4.9,2.0,virginica\n7.7,2.8,6.7,2.0,virginica\n6.3,2.7,4.9,1.8,virginica\n6.7,3.3,5.7,2.1,virginica\n7.2,3.2,6.0,1.8,virginica\n6.2,2.8,4.8,1.8,virginica\n6.1,3.0,4.9,1.8,virginica\n6.4,2.8,5.6,2.1,virginica\n7.2,3.0,5.8,1.6,virginica\n7.4,2.8,6.1,1.9,virginica\n7.9,3.8,6.4,2.0,virginica\n6.4,2.8,5.6,2.2,virginica\n6.3,2.8,5.1,1.5,virginica\n6.1,2.6,5.6,1.4,virginica\n7.7,3.0,6.1,2.3,virginica\n6.3,3.4,5.6,2.4,virginica\n6.4,3.1,5.5,1.8,virginica\n6.0,3.0,4.8,1.8,virginica\n6.9,3.1,5.4,2.1,virginica\n6.7,3.1,5.6,2.4,virginica\n6.9,3.1,5.1,2.3,virginica\n5.8,2.7,5.1,1.9,virginica\n6.8,3.2,5.9,2.3,virginica\n6.7,3.3,5.7,2.5,virginica\n6.7,3.0,5.2,2.3,virginica\n6.3,2.5,5.0,1.9,virginica\n6.5,3.0,5.2,2.0,virginica\n6.2,3.4,5.4,2.3,virginica\n5.9,3.0,5.1,1.8,virginica\n","format":{"type":"csv"}}});</script></div></td></tr></tbody></table>


### Additional Hanami templates
The `scicloj.noj.v1.vis.hanami.templates` namespace add Hanami templates to Hanami's own collection.


<div class="sourceClojure">
```clojure
(-> datasets/mtcars
    (vis/hanami-plot vht/boxplot-chart
                     {:X :gear
                      :XTYPE :nominal
                      :Y :mpg}))
```
</div>


<div><script>vegaEmbed(document.currentScript.parentElement, {"encoding":{"y":{"field":"mpg","type":"quantitative"},"x":{"field":"gear","type":"nominal"}},"mark":{"type":"boxplot","tooltip":true},"width":400,"background":"floralwhite","height":300,"data":{"values":"name,mpg,cyl,disp,hp,drat,wt,qsec,vs,am,gear,carb\nMazda RX4,21.0,6,160.0,110,3.9,2.62,16.46,0,1,4,4\nMazda RX4 Wag,21.0,6,160.0,110,3.9,2.875,17.02,0,1,4,4\nDatsun 710,22.8,4,108.0,93,3.85,2.32,18.61,1,1,4,1\nHornet 4 Drive,21.4,6,258.0,110,3.08,3.215,19.44,1,0,3,1\nHornet Sportabout,18.7,8,360.0,175,3.15,3.44,17.02,0,0,3,2\nValiant,18.1,6,225.0,105,2.76,3.46,20.22,1,0,3,1\nDuster 360,14.3,8,360.0,245,3.21,3.57,15.84,0,0,3,4\nMerc 240D,24.4,4,146.7,62,3.69,3.19,20.0,1,0,4,2\nMerc 230,22.8,4,140.8,95,3.92,3.15,22.9,1,0,4,2\nMerc 280,19.2,6,167.6,123,3.92,3.44,18.3,1,0,4,4\nMerc 280C,17.8,6,167.6,123,3.92,3.44,18.9,1,0,4,4\nMerc 450SE,16.4,8,275.8,180,3.07,4.07,17.4,0,0,3,3\nMerc 450SL,17.3,8,275.8,180,3.07,3.73,17.6,0,0,3,3\nMerc 450SLC,15.2,8,275.8,180,3.07,3.78,18.0,0,0,3,3\nCadillac Fleetwood,10.4,8,472.0,205,2.93,5.25,17.98,0,0,3,4\nLincoln Continental,10.4,8,460.0,215,3.0,5.424,17.82,0,0,3,4\nChrysler Imperial,14.7,8,440.0,230,3.23,5.345,17.42,0,0,3,4\nFiat 128,32.4,4,78.7,66,4.08,2.2,19.47,1,1,4,1\nHonda Civic,30.4,4,75.7,52,4.93,1.615,18.52,1,1,4,2\nToyota Corolla,33.9,4,71.1,65,4.22,1.835,19.9,1,1,4,1\nToyota Corona,21.5,4,120.1,97,3.7,2.465,20.01,1,0,3,1\nDodge Challenger,15.5,8,318.0,150,2.76,3.52,16.87,0,0,3,2\nAMC Javelin,15.2,8,304.0,150,3.15,3.435,17.3,0,0,3,2\nCamaro Z28,13.3,8,350.0,245,3.73,3.84,15.41,0,0,3,4\nPontiac Firebird,19.2,8,400.0,175,3.08,3.845,17.05,0,0,3,2\nFiat X1-9,27.3,4,79.0,66,4.08,1.935,18.9,1,1,4,1\nPorsche 914-2,26.0,4,120.3,91,4.43,2.14,16.7,0,1,5,2\nLotus Europa,30.4,4,95.1,113,3.77,1.513,16.9,1,1,5,2\nFord Pantera L,15.8,8,351.0,264,4.22,3.17,14.5,0,1,5,4\nFerrari Dino,19.7,6,145.0,175,3.62,2.77,15.5,0,1,5,6\nMaserati Bora,15.0,8,301.0,335,3.54,3.57,14.6,0,1,5,8\nVolvo 142E,21.4,4,121.0,109,4.11,2.78,18.6,1,1,4,2\n","format":{"type":"csv"}}});</script></div>


### Layers


<div class="sourceClojure">
```clojure
(-> random-walk
    (vis/hanami-layers
     {:TITLE "points and a line"}
     [(vis/hanami-plot nil
                       ht/point-chart
                       {:MSIZE 400})
      (vis/hanami-plot nil
                       ht/line-chart
                       {:MSIZE 4
                        :MCOLOR "brown"})]))
```
</div>


<div><script>vegaEmbed(document.currentScript.parentElement, {"width":400,"background":"floralwhite","title":{"text":"points and a line"},"layer":[{"encoding":{"y":{"field":"y","type":"quantitative"},"x":{"field":"x","type":"quantitative"}},"mark":{"type":"circle","size":400,"tooltip":true},"width":400,"background":"floralwhite","height":300},{"encoding":{"y":{"field":"y","type":"quantitative"},"x":{"field":"x","type":"quantitative"}},"mark":{"type":"line","size":4,"color":"brown","tooltip":true},"width":400,"background":"floralwhite","height":300}],"height":300,"data":{"values":"x,y\n0,-0.10891746407198855\n1,-0.17746785165549706\n2,0.010481929682169322\n3,-0.30373971592778526\n4,-0.47604808081984973\n5,-0.892613043086356\n6,-1.1415894660576191\n7,-1.3022333469107266\n8,-1.648762135975216\n9,-1.3201114922367414\n10,-1.7176056054413757\n11,-1.3492575022010356\n12,-0.8540467998730537\n13,-0.9979245662928977\n14,-1.0470624845665784\n15,-0.7440189393874057\n16,-0.3609645768215545\n17,-0.6690171277438733\n18,-0.2370752883476035\n19,-0.3441999031150036\n","format":{"type":"csv"}}});</script></div>


### Concatenation


<div class="sourceClojure">
```clojure
(-> random-walk
    (vis/hanami-vconcat
     {}
     [(vis/hanami-plot nil
                       ht/point-chart
                       {:MSIZE 400
                        :HEIGHT 100
                        :WIDTH 100})
      (vis/hanami-plot nil
                       ht/line-chart
                       {:MSIZE 4
                        :MCOLOR "brown"
                        :HEIGHT 100
                        :WIDTH 100})]))
```
</div>


<div><script>vegaEmbed(document.currentScript.parentElement, {"width":400,"background":"floralwhite","vconcat":[{"encoding":{"y":{"field":"y","type":"quantitative"},"x":{"field":"x","type":"quantitative"}},"mark":{"type":"circle","size":400,"tooltip":true},"width":100,"background":"floralwhite","height":100},{"encoding":{"y":{"field":"y","type":"quantitative"},"x":{"field":"x","type":"quantitative"}},"mark":{"type":"line","size":4,"color":"brown","tooltip":true},"width":100,"background":"floralwhite","height":100}],"height":300,"data":{"values":"x,y\n0,-0.10891746407198855\n1,-0.17746785165549706\n2,0.010481929682169322\n3,-0.30373971592778526\n4,-0.47604808081984973\n5,-0.892613043086356\n6,-1.1415894660576191\n7,-1.3022333469107266\n8,-1.648762135975216\n9,-1.3201114922367414\n10,-1.7176056054413757\n11,-1.3492575022010356\n12,-0.8540467998730537\n13,-0.9979245662928977\n14,-1.0470624845665784\n15,-0.7440189393874057\n16,-0.3609645768215545\n17,-0.6690171277438733\n18,-0.2370752883476035\n19,-0.3441999031150036\n","format":{"type":"csv"}}});</script></div>


<div class="sourceClojure">
```clojure
(-> random-walk
    (vis/hanami-hconcat
     {}
     [(vis/hanami-plot nil
                       ht/point-chart
                       {:MSIZE 400
                        :HEIGHT 100
                        :WIDTH 100})
      (vis/hanami-plot nil
                       ht/line-chart
                       {:MSIZE 4
                        :MCOLOR "brown"
                        :HEIGHT 100
                        :WIDTH 100})]))
```
</div>


<div><script>vegaEmbed(document.currentScript.parentElement, {"hconcat":[{"encoding":{"y":{"field":"y","type":"quantitative"},"x":{"field":"x","type":"quantitative"}},"mark":{"type":"circle","size":400,"tooltip":true},"width":100,"background":"floralwhite","height":100},{"encoding":{"y":{"field":"y","type":"quantitative"},"x":{"field":"x","type":"quantitative"}},"mark":{"type":"line","size":4,"color":"brown","tooltip":true},"width":100,"background":"floralwhite","height":100}],"width":400,"background":"floralwhite","height":300,"data":{"values":"x,y\n0,-0.10891746407198855\n1,-0.17746785165549706\n2,0.010481929682169322\n3,-0.30373971592778526\n4,-0.47604808081984973\n5,-0.892613043086356\n6,-1.1415894660576191\n7,-1.3022333469107266\n8,-1.648762135975216\n9,-1.3201114922367414\n10,-1.7176056054413757\n11,-1.3492575022010356\n12,-0.8540467998730537\n13,-0.9979245662928977\n14,-1.0470624845665784\n15,-0.7440189393874057\n16,-0.3609645768215545\n17,-0.6690171277438733\n18,-0.2370752883476035\n19,-0.3441999031150036\n","format":{"type":"csv"}}});</script></div>


### Linear regression


<div class="sourceClojure">
```clojure
(-> datasets/mtcars
    (stats/add-predictions :mpg [:wt]
                           {:model-type :smile.regression/ordinary-least-square})
    (vis/hanami-layers {}
                       [(vis/hanami-plot nil
                                         ht/point-chart
                                         {:X :wt
                                          :Y :mpg
                                          :MSIZE 200
                                          :HEIGHT 200
                                          :WIDTH 200})
                        (vis/hanami-plot nil
                                         ht/line-chart
                                         {:X :wt
                                          :Y :mpg-prediction
                                          :MSIZE 5
                                          :MCOLOR "purple"
                                          :YTITLE :mpg})]))
```
</div>


<div><script>vegaEmbed(document.currentScript.parentElement, {"width":400,"background":"floralwhite","layer":[{"encoding":{"y":{"field":"mpg","type":"quantitative"},"x":{"field":"wt","type":"quantitative"}},"mark":{"type":"circle","size":200,"tooltip":true},"width":200,"background":"floralwhite","height":200},{"encoding":{"y":{"field":"mpg-prediction","type":"quantitative","axis":{"title":"mpg"}},"x":{"field":"wt","type":"quantitative"}},"mark":{"type":"line","size":5,"color":"purple","tooltip":true},"width":400,"background":"floralwhite","height":300}],"height":300,"data":{"values":"name,mpg,cyl,disp,hp,drat,wt,qsec,vs,am,gear,carb,mpg-prediction\nMazda RX4,21.0,6,160.0,110,3.9,2.62,16.46,0,1,4,4,23.28261064680863\nMazda RX4 Wag,21.0,6,160.0,110,3.9,2.875,17.02,0,1,4,4,21.91977039576435\nDatsun 710,22.8,4,108.0,93,3.85,2.32,18.61,1,1,4,1,24.885952118625436\nHornet 4 Drive,21.4,6,258.0,110,3.08,3.215,19.44,1,0,3,1,20.102650061038638\nHornet Sportabout,18.7,8,360.0,175,3.15,3.44,17.02,0,0,3,2,18.900143957176034\nValiant,18.1,6,225.0,105,2.76,3.46,20.22,1,0,3,1,18.793254525721583\nDuster 360,14.3,8,360.0,245,3.21,3.57,15.84,0,0,3,4,18.205362652722087\nMerc 240D,24.4,4,146.7,62,3.69,3.19,20.0,1,0,4,2,20.236261850356705\nMerc 230,22.8,4,140.8,95,3.92,3.15,22.9,1,0,4,2,20.45004071326561\nMerc 280,19.2,6,167.6,123,3.92,3.44,18.3,1,0,4,4,18.900143957176034\nMerc 280C,17.8,6,167.6,123,3.92,3.44,18.9,1,0,4,4,18.900143957176034\nMerc 450SE,16.4,8,275.8,180,3.07,4.07,17.4,0,0,3,3,15.533126866360746\nMerc 450SL,17.3,8,275.8,180,3.07,3.73,17.6,0,0,3,3,17.350247201086457\nMerc 450SLC,15.2,8,275.8,180,3.07,3.78,18.0,0,0,3,3,17.083023622450327\nCadillac Fleetwood,10.4,8,472.0,205,2.93,5.25,17.98,0,0,3,4,9.226650410547986\nLincoln Continental,10.4,8,460.0,215,3.0,5.424,17.82,0,0,3,4,8.29671235689424\nChrysler Imperial,14.7,8,440.0,230,3.23,5.345,17.42,0,0,3,4,8.718925611139333\nFiat 128,32.4,4,78.7,66,4.08,2.2,19.47,1,1,4,1,25.527288707352156\nHonda Civic,30.4,4,75.7,52,4.93,1.615,18.52,1,1,4,2,28.653804577394922\nToyota Corolla,33.9,4,71.1,65,4.22,1.835,19.9,1,1,4,1,27.478020831395934\nToyota Corona,21.5,4,120.1,97,3.7,2.465,20.01,1,0,3,1,24.11100374058065\nDodge Challenger,15.5,8,318.0,150,2.76,3.52,16.87,0,0,3,2,18.47258623135822\nAMC Javelin,15.2,8,304.0,150,3.15,3.435,17.3,0,0,3,2,18.92686631503965\nCamaro Z28,13.3,8,350.0,245,3.73,3.84,15.41,0,0,3,4,16.762355328086965\nPontiac Firebird,19.2,8,400.0,175,3.08,3.845,17.05,0,0,3,2,16.73563297022335\nFiat X1-9,27.3,4,79.0,66,4.08,1.935,18.9,1,1,4,1,26.943573674123666\nPorsche 914-2,26.0,4,120.3,91,4.43,2.14,16.7,0,1,5,2,25.847957001715518\nLotus Europa,30.4,4,95.1,113,3.77,1.513,16.9,1,1,5,2,29.198940677812637\nFord Pantera L,15.8,8,351.0,264,4.22,3.17,14.5,0,1,5,4,20.34315128181116\nFerrari Dino,19.7,6,145.0,175,3.62,2.77,15.5,0,1,5,6,22.48093991090023\nMaserati Bora,15.0,8,301.0,335,3.54,3.57,14.6,0,1,5,8,18.205362652722087\nVolvo 142E,21.4,4,121.0,109,4.11,2.78,18.6,1,1,4,2,22.427495195173\n","format":{"type":"csv"}}});</script></div>


### Histogram


<div class="sourceClojure">
```clojure
(-> datasets/iris
    (vis/hanami-histogram :sepal-width
                          {:nbins 10}))
```
</div>


<div><script>vegaEmbed(document.currentScript.parentElement, {"encoding":{"y":{"field":"count","type":"quantitative"},"x":{"scale":{"zero":false},"field":"left","type":"quantitative"},"y2":{"field":0,"type":"quantitative"},"x2":{"scale":{"zero":false},"field":"right","type":"quantitative"}},"mark":"rect","width":400,"background":"floralwhite","height":300,"data":{"values":"count,left,right\n4,2.0,2.24\n7,2.24,2.48\n22,2.48,2.72\n24,2.72,2.96\n37,2.96,3.2\n31,3.2,3.4400000000000004\n10,3.4400000000000004,3.6800000000000006\n11,3.6800000000000006,3.9200000000000004\n2,3.9200000000000004,4.16\n2,4.16,4.4\n","format":{"type":"csv"}}});</script></div>


### Combining a few things together

The following is inspired by the example at Plotnine's [main page](https://plotnine.readthedocs.io/en/stable/).
Note how we add regression lines here. We take care of layout and colouring on our side, not using Vega-Lite for that.


<div class="sourceClojure">
```clojure
(let [pallete (->> :accent
                   color/palette
                   (mapv color/format-hex))]
  (-> datasets/mtcars
      (tc/group-by :gear {:result-type :as-map})
      (->> (sort-by key)
           (map-indexed
            (fn [i [group-name ds]]
              (-> ds
                  (stats/add-predictions :mpg [:wt]
                                         {:model-type :smile.regression/ordinary-least-square})
                  (tc/select-columns [:gear :wt :mpg :mpg-prediction])
                  (vis/hanami-layers {:TITLE (str "grear=" group-name)}
                                     [(vis/hanami-plot nil
                                                       ht/point-chart
                                                       {:X :wt
                                                        :Y :mpg
                                                        :MSIZE 200
                                                        :MCOLOR (pallete i)
                                                        :HEIGHT 200
                                                        :WIDTH 200})
                                      (vis/hanami-plot nil
                                                       ht/line-chart
                                                       {:X :wt
                                                        :Y :mpg-prediction
                                                        :MSIZE 5
                                                        :MCOLOR (pallete i)
                                                        :YTITLE :mpg})]
                                     ))))
           (vis/hanami-vconcat nil {}))))
```
</div>


<div><script>vegaEmbed(document.currentScript.parentElement, {"width":400,"background":"floralwhite","vconcat":[{"width":400,"background":"floralwhite","title":{"text":"grear=3"},"layer":[{"encoding":{"y":{"field":"mpg","type":"quantitative"},"x":{"field":"wt","type":"quantitative"}},"mark":{"type":"circle","size":200,"color":"#7fc97f","tooltip":true},"width":200,"background":"floralwhite","height":200},{"encoding":{"y":{"field":"mpg-prediction","type":"quantitative","axis":{"title":"mpg"}},"x":{"field":"wt","type":"quantitative"}},"mark":{"type":"line","size":5,"color":"#7fc97f","tooltip":true},"width":400,"background":"floralwhite","height":300}],"height":300,"data":{"values":"gear,wt,mpg,mpg-prediction\n3,3.215,21.4,18.24575076879608\n3,3.44,18.7,17.535458674671055\n3,3.46,18.1,17.472321599637716\n3,3.57,14.3,17.125067686954374\n3,4.07,16.4,15.546640811120986\n3,3.73,17.3,16.61997108668769\n3,3.78,15.2,16.46212839910435\n3,5.25,10.4,11.821553384154196\n3,5.424,10.4,11.272260831364175\n3,5.345,14.7,11.521652277745854\n3,2.465,21.5,20.613391082546155\n3,3.52,15.5,17.282910374537714\n3,3.435,15.2,17.551242943429386\n3,3.84,13.3,16.272717174004345\n3,3.845,19.2,16.25693290524601\n","format":{"type":"csv"}}},{"width":400,"background":"floralwhite","title":{"text":"grear=4"},"layer":[{"encoding":{"y":{"field":"mpg","type":"quantitative"},"x":{"field":"wt","type":"quantitative"}},"mark":{"type":"circle","size":200,"color":"#beaed4","tooltip":true},"width":200,"background":"floralwhite","height":200},{"encoding":{"y":{"field":"mpg-prediction","type":"quantitative","axis":{"title":"mpg"}},"x":{"field":"wt","type":"quantitative"}},"mark":{"type":"line","size":5,"color":"#beaed4","tooltip":true},"width":400,"background":"floralwhite","height":300}],"height":300,"data":{"values":"gear,wt,mpg,mpg-prediction\n4,2.62,21.0,24.510455071959058\n4,2.875,21.0,22.76026807682699\n4,2.32,22.8,26.569498595643847\n4,3.19,24.4,20.59827237695796\n4,3.15,22.8,20.872811513449268\n4,3.44,19.2,18.882402773887303\n4,3.44,17.8,18.882402773887303\n4,2.2,32.4,27.39311600511776\n4,1.615,30.4,31.4082508763031\n4,1.835,33.9,29.89828562560092\n4,1.935,27.3,29.211937784372658\n4,2.78,21.4,23.41229852599384\n","format":{"type":"csv"}}},{"width":400,"background":"floralwhite","title":{"text":"grear=5"},"layer":[{"encoding":{"y":{"field":"mpg","type":"quantitative"},"x":{"field":"wt","type":"quantitative"}},"mark":{"type":"circle","size":200,"color":"#fdc086","tooltip":true},"width":200,"background":"floralwhite","height":200},{"encoding":{"y":{"field":"mpg-prediction","type":"quantitative","axis":{"title":"mpg"}},"x":{"field":"wt","type":"quantitative"}},"mark":{"type":"line","size":5,"color":"#fdc086","tooltip":true},"width":400,"background":"floralwhite","height":300}],"height":300,"data":{"values":"gear,wt,mpg,mpg-prediction\n5,2.14,26.0,25.34362502587085\n5,1.513,30.4,30.38867758620586\n5,3.17,15.8,17.055899129307758\n5,2.77,19.7,20.274433458070124\n5,3.57,15.0,13.83736480054539\n","format":{"type":"csv"}}}],"height":300});</script></div>

A similar example with histograms:


<div class="sourceClojure">
```clojure
(let [pallete (->> :accent
                   color/palette
                   (mapv color/format-hex))]
  (-> datasets/iris
      (tc/group-by :species {:result-type :as-map})
      (->> (sort-by key)
           (map-indexed
            (fn [i [group-name ds]]
              (-> ds
                  (vis/hanami-histogram :sepal-width
                                        {:nbins 10}))))
           (vis/hanami-vconcat nil {}))))
```
</div>


<div><script>vegaEmbed(document.currentScript.parentElement, {"width":400,"background":"floralwhite","vconcat":[{"encoding":{"y":{"field":"count","type":"quantitative"},"x":{"scale":{"zero":false},"field":"left","type":"quantitative"},"y2":{"field":0,"type":"quantitative"},"x2":{"scale":{"zero":false},"field":"right","type":"quantitative"}},"mark":"rect","width":400,"background":"floralwhite","height":300,"data":{"values":"count,left,right\n1,2.3,2.51\n0,2.51,2.7199999999999998\n1,2.7199999999999998,2.9299999999999997\n10,2.9299999999999997,3.14\n7,3.14,3.35\n15,3.35,3.56\n6,3.56,3.7700000000000005\n6,3.7700000000000005,3.9800000000000004\n2,3.9800000000000004,4.19\n2,4.19,4.4\n","format":{"type":"csv"}}},{"encoding":{"y":{"field":"count","type":"quantitative"},"x":{"scale":{"zero":false},"field":"left","type":"quantitative"},"y2":{"field":0,"type":"quantitative"},"x2":{"scale":{"zero":false},"field":"right","type":"quantitative"}},"mark":"rect","width":400,"background":"floralwhite","height":300,"data":{"values":"count,left,right\n1,2.0,2.14\n2,2.14,2.28\n6,2.28,2.42\n4,2.42,2.56\n3,2.56,2.7\n11,2.7,2.84\n7,2.84,2.98\n11,2.98,3.12\n3,3.12,3.26\n2,3.26,3.4\n","format":{"type":"csv"}}},{"encoding":{"y":{"field":"count","type":"quantitative"},"x":{"scale":{"zero":false},"field":"left","type":"quantitative"},"y2":{"field":0,"type":"quantitative"},"x2":{"scale":{"zero":false},"field":"right","type":"quantitative"}},"mark":"rect","width":400,"background":"floralwhite","height":300,"data":{"values":"count,left,right\n1,2.2,2.3600000000000003\n4,2.3600000000000003,2.52\n2,2.52,2.68\n12,2.68,2.84\n2,2.84,3.0\n16,3.0,3.16\n8,3.16,3.3200000000000003\n2,3.3200000000000003,3.48\n1,3.48,3.6399999999999997\n2,3.6399999999999997,3.8\n","format":{"type":"csv"}}}],"height":300});</script></div>

Scatterplots and regression lines again, this time using Vega-Lite for layout and coloring (using its "facet" option).


<div class="sourceClojure">
```clojure
(-> datasets/mtcars
    (tc/group-by [:gear])
    (stats/add-predictions :mpg [:wt]
                           {:model-type :smile.regression/ordinary-least-square})
    (tc/ungroup)
    (tc/select-columns [:gear :wt :mpg :mpg-prediction])
    (vis/hanami-layers {}
                       [(vis/hanami-plot nil
                                         ht/point-chart
                                         {:X :wt
                                          :Y :mpg
                                          :MSIZE 200
                                          :COLOR "gear"
                                          :HEIGHT 100
                                          :WIDTH 200})
                        (vis/hanami-plot nil
                                         ht/line-chart
                                         {:X :wt
                                          :Y :mpg-prediction
                                          :MSIZE 5
                                          :COLOR "gear"
                                          :YTITLE :mpg})])
    ((fn [spec]
       {:facet {:row {:field "gear"}}
        :spec (dissoc spec :data)
        :data (:data spec)}))
    kind/vega-lite)
```
</div>


<div><script>vegaEmbed(document.currentScript.parentElement, {"facet":{"row":{"field":"gear"}},"spec":{"width":400,"background":"floralwhite","layer":[{"encoding":{"y":{"field":"mpg","type":"quantitative"},"color":{"field":"gear","type":"nominal"},"x":{"field":"wt","type":"quantitative"}},"mark":{"type":"circle","size":200,"tooltip":true},"width":200,"background":"floralwhite","height":100},{"encoding":{"y":{"field":"mpg-prediction","type":"quantitative","axis":{"title":"mpg"}},"color":{"field":"gear","type":"nominal"},"x":{"field":"wt","type":"quantitative"}},"mark":{"type":"line","size":5,"tooltip":true},"width":400,"background":"floralwhite","height":300}],"height":300},"data":{"values":"gear,wt,mpg,mpg-prediction\n4,2.62,21.0,24.510455071959058\n4,2.875,21.0,22.76026807682699\n4,2.32,22.8,26.569498595643847\n4,3.19,24.4,20.59827237695796\n4,3.15,22.8,20.872811513449268\n4,3.44,19.2,18.882402773887303\n4,3.44,17.8,18.882402773887303\n4,2.2,32.4,27.39311600511776\n4,1.615,30.4,31.4082508763031\n4,1.835,33.9,29.89828562560092\n4,1.935,27.3,29.211937784372658\n4,2.78,21.4,23.41229852599384\n3,3.215,21.4,18.24575076879608\n3,3.44,18.7,17.535458674671055\n3,3.46,18.1,17.472321599637716\n3,3.57,14.3,17.125067686954374\n3,4.07,16.4,15.546640811120986\n3,3.73,17.3,16.61997108668769\n3,3.78,15.2,16.46212839910435\n3,5.25,10.4,11.821553384154196\n3,5.424,10.4,11.272260831364175\n3,5.345,14.7,11.521652277745854\n3,2.465,21.5,20.613391082546155\n3,3.52,15.5,17.282910374537714\n3,3.435,15.2,17.551242943429386\n3,3.84,13.3,16.272717174004345\n3,3.845,19.2,16.25693290524601\n5,2.14,26.0,25.34362502587085\n5,1.513,30.4,30.38867758620586\n5,3.17,15.8,17.055899129307758\n5,2.77,19.7,20.274433458070124\n5,3.57,15.0,13.83736480054539\n","format":{"type":"csv"}}});</script></div>


<div class="sourceClojure">
```clojure
:bye
```
</div>



<div class="printedClojure">
```clojure
:bye

```
</div>


<div style="background-color:grey;height:2px;width:100%;"></div>

<div><pre><small><small>source: <a href="https://github.com/scicloj/clojure-data-scrapbook/blob/london-clojurians-talk/notebooks/visualization.clj">notebooks/visualization.clj</a></small></small></pre></div>