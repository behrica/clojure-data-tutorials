
---
format:
  html: {toc: true, toc-depth: 4, theme: spacelab, output-file: notebooks.commit_details.html}
highlight-style: solarized

---
<style>table {
  border-style: thin;
}
th, td {
  padding: 6px;
}
td {
  text-align: left;
}
th {
  text-align: center;
  background-color: #ddd;
}
tr:nth-child(even) {
  background-color: #f6f6f6;
}
</style><style>.printedClojure .sourceCode {
  background-color: transparent;
  border-style: none;
}
</style>
<script src="notebooks.commit_details_files/md-default5.js" type="text/javascript"></script><script src="notebooks.commit_details_files/md-default6.js" type="text/javascript"></script><script src="notebooks.commit_details_files/vega7.js" type="text/javascript"></script><script src="notebooks.commit_details_files/vega8.js" type="text/javascript"></script><script src="notebooks.commit_details_files/vega9.js" type="text/javascript"></script>

<div class="sourceClojure">
```clojure
(ns notebooks.commit-details
  (:require [tablecloth.api :as tc]
            [scicloj.noj.v1.vis.hanami :as hanami]
            [aerial.hanami.templates :as ht]
            [tech.v3.datatype.datetime :as datetime]
            [tech.v3.datatype.rolling :as rolling]
            [tech.v3.datatype.functional :as fun]
            [tech.v3.dataset.print :as print]
            [data.generate-dataset]
            [clojure.math :as math]
            [scicloj.kindly.v4.kind :as kind]
            [scicloj.noj.v1.stats :as stats]))
```
</div>



<div class="sourceClojure">
```clojure
(delay
  (-> data.generate-dataset/commit-details
      (tc/group-by [:language :html_url])
      (tc/aggregate {:n-contributors (fn [ds]
                                       (-> ds
                                           :email
                                           distinct
                                           count))})
      (tc/order-by [:n-contributors] :desc)))
```
</div>


_unnamed [1891 3]:

| :language |                                                     :html_url | :n-contributors |
|-----------|---------------------------------------------------------------|----------------:|
|   Clojure |                      https://github.com/technomancy/leiningen |             474 |
|   Clojure |                          https://github.com/metabase/metabase |             417 |
|    Python |                                https://github.com/qtile/qtile |             407 |
|    Python |                       https://github.com/stephenmcd/mezzanine |             341 |
|   Clojure |                    https://github.com/status-im/status-mobile |             331 |
|    Python |                            https://github.com/aws/aws-sam-cli |             308 |
|    Python |                          https://github.com/NCSC-NL/log4shell |             299 |
|   Clojure |                              https://github.com/logseq/logseq |             282 |
|    Python |                             https://github.com/StackStorm/st2 |             250 |
|    Python |                                  https://github.com/dipy/dipy |             236 |
|       ... |                                                           ... |             ... |
|    Python | https://github.com/khanhnamle1994/natural-language-processing |               1 |
|   Clojure |                https://github.com/dlebrero/wireshark-plantuml |               1 |
|    Python |                           https://github.com/ptoomey3/evilarc |               1 |
|    Python |                https://github.com/clcarwin/focal_loss_pytorch |               1 |
|    Python |                         https://github.com/dr0op/WeblogicScan |               1 |
|   Clojure |                        https://github.com/BrunoBonacci/safely |               1 |
|   Clojure |                              https://github.com/aphyr/dom-top |               1 |
|   Clojure |                   https://github.com/thheller/shadow-arborist |               1 |
|    Python | https://github.com/leeguandong/Interview-code-practice-python |               1 |
|   Clojure |                     https://github.com/Yuppiechef/cqrs-server |               1 |
|   Clojure |                    https://github.com/stuartsierra/dependency |               1 |




<div class="sourceClojure">
```clojure
(delay
  (-> data.generate-dataset/commit-details
      (tc/select-rows #(-> % :html_url (= "https://github.com/technomancy/leiningen")))
      (tc/group-by [:email])
      (tc/aggregate {:n tc/row-count})
      (tc/order-by [:n] :desc)))
```
</div>


_unnamed [474 2]:

|                                 :email |   :n |
|----------------------------------------|-----:|
|                  technomancy@gmail.com | 2127 |
|                        phil@hagelb.org |  499 |
|                  jeannikl@hypirion.com |  419 |
|                    trptcolin@gmail.com |  117 |
|                michael@defprotocol.org |   78 |
|                       mtyaka@gmail.com |   70 |
|                            i@raynes.me |   61 |
|                 git@justinbalthrop.com |   56 |
|                 mtopolnik@inge-mark.hr |   55 |
|                michael@novemberain.com |   49 |
|                                    ... |  ... |
|           ulrich.moritz@googlemail.com |    1 |
|                eric.hanchrow@gmail.com |    1 |
|                       tim@dysinger.net |    1 |
| visionary.software.solutions@gmail.com |    1 |
|                  romanandreg@gmail.com |    1 |
|                       self@sungpae.com |    1 |
|          julian.birch@colourcoding.net |    1 |
|             david@deadpansincerity.com |    1 |
|                    jaderholm@gmail.com |    1 |
|                 acgetchell@ucdavis.edu |    1 |
|                     heinz@licenser.net |    1 |




<div class="sourceClojure">
```clojure
(delay
  (-> data.generate-dataset/commit-details
      (tc/group-by [:language :html_url])
      (tc/aggregate {:n-contributors (fn [ds]
                                       (-> ds
                                           :email
                                           distinct
                                           count))})
      (tc/order-by [:n-contributors] :desc)
      (tc/left-join data.generate-dataset/repos-ds [:html_url])
      (tc/select-rows #(-> % :n-contributors (> 20)))
      (hanami/plot ht/point-chart
                   {:X :n-contributors
                    :XSCALE {:type "log"}
                    :Y :stargazers_count
                    :YSCALE {:type "log"}
                    :COLOR "language"})))
```
</div>


<div><script>vegaEmbed(document.currentScript.parentElement, {"encoding":{"y":{"scale":{"type":"log"},"field":"stargazers_count","type":"quantitative"},"color":{"field":"language","type":"nominal"},"x":{"scale":{"type":"log"},"field":"n-contributors","type":"quantitative"}},"mark":{"type":"circle","tooltip":true},"width":400,"background":"floralwhite","height":300,"data":{"url":"notebooks.commit_details_files\/0.csv","format":{"type":"csv"}}});</script></div>


<div class="sourceClojure">
```clojure
(delay
  (-> data.generate-dataset/commit-details
      (tc/group-by [:language :html_url])
      (tc/aggregate {:n-contributors (fn [ds]
                                       (-> ds
                                           :email
                                           distinct
                                           count))})
      (tc/order-by [:n-contributors] :desc)
      (tc/left-join data.generate-dataset/repos-ds [:html_url])
      (tc/select-rows #(-> % :n-contributors (> 20)))
      (tc/group-by [:language])
      (hanami/plot ht/point-chart
                   {:X :n-contributors
                    :XSCALE {:type "log"}
                    :Y :stargazers_count
                    :YSCALE {:type "log"}})))
```
</div>


<table class="table"><thead><tr><th>language</th><th>plot-0</th></tr></thead><tbody><tr><td><div><p>Python</p></div></td><td><div><script>vegaEmbed(document.currentScript.parentElement, {"encoding":{"y":{"scale":{"type":"log"},"field":"stargazers_count","type":"quantitative"},"x":{"scale":{"type":"log"},"field":"n-contributors","type":"quantitative"}},"mark":{"type":"circle","tooltip":true},"width":400,"background":"floralwhite","height":300,"data":{"url":"notebooks.commit_details_files\/1.csv","format":{"type":"csv"}}});</script></div></td></tr><tr><td><div><p>Clojure</p></div></td><td><div><script>vegaEmbed(document.currentScript.parentElement, {"encoding":{"y":{"scale":{"type":"log"},"field":"stargazers_count","type":"quantitative"},"x":{"scale":{"type":"log"},"field":"n-contributors","type":"quantitative"}},"mark":{"type":"circle","tooltip":true},"width":400,"background":"floralwhite","height":300,"data":{"url":"notebooks.commit_details_files\/2.csv","format":{"type":"csv"}}});</script></div></td></tr></tbody></table>


<div class="sourceClojure">
```clojure
(delay
  (-> data.generate-dataset/commit-details
      (tc/group-by [:language :html_url])
      (tc/aggregate {:n-contributors (fn [ds]
                                       (-> ds
                                           :email
                                           distinct
                                           count))})
      (tc/order-by [:n-contributors] :desc)
      (tc/left-join data.generate-dataset/repos-ds [:html_url])
      (tc/select-rows #(-> % :n-contributors (> 20)))
      (tc/group-by [:language])
      (tc/add-columns {:log-stargazers #(-> %
                                            :stargazers_count
                                            fun/log)
                       :log-contributors #(-> %
                                              :n-contributors
                                              fun/log)})
      (stats/add-predictions :log-stargazers
                             [:log-contributors]
                             {:model-type :smile.regression/ordinary-least-square})
      (hanami/linear-regression-plot
       :log-stargazers
       :log-contributors
       {:X :log-contributors
        :XSCALE {:zero false}
        :YSCALE {:zero false
                 :domain [5 12]}
        :line-options {:MCOLOR "brown"}})))
```
</div>


<table class="table"><thead><tr><th>language</th><th>plot-0</th></tr></thead><tbody><tr><td><div><p>Python</p></div></td><td><div><script>vegaEmbed(document.currentScript.parentElement, {"width":400,"background":"floralwhite","layer":[{"encoding":{"y":{"scale":{"zero":false,"domain":[5,12]},"field":"log-stargazers","type":"quantitative"},"x":{"scale":{"zero":false},"field":"log-contributors","type":"quantitative"}},"mark":{"type":"circle","tooltip":true},"width":400,"background":"floralwhite","height":300},{"encoding":{"y":{"scale":{"zero":false,"domain":[5,12]},"field":"log-stargazers-prediction","type":"quantitative","axis":{"title":"log-stargazers"}},"x":{"scale":{"zero":false},"field":"log-contributors","type":"quantitative"}},"mark":{"type":"line","color":"brown","tooltip":true},"width":400,"background":"floralwhite","height":300}],"height":300,"data":{"url":"notebooks.commit_details_files\/3.csv","format":{"type":"csv"}}});</script></div></td></tr><tr><td><div><p>Clojure</p></div></td><td><div><script>vegaEmbed(document.currentScript.parentElement, {"width":400,"background":"floralwhite","layer":[{"encoding":{"y":{"scale":{"zero":false,"domain":[5,12]},"field":"log-stargazers","type":"quantitative"},"x":{"scale":{"zero":false},"field":"log-contributors","type":"quantitative"}},"mark":{"type":"circle","tooltip":true},"width":400,"background":"floralwhite","height":300},{"encoding":{"y":{"scale":{"zero":false,"domain":[5,12]},"field":"log-stargazers-prediction","type":"quantitative","axis":{"title":"log-stargazers"}},"x":{"scale":{"zero":false},"field":"log-contributors","type":"quantitative"}},"mark":{"type":"line","color":"brown","tooltip":true},"width":400,"background":"floralwhite","height":300}],"height":300,"data":{"url":"notebooks.commit_details_files\/4.csv","format":{"type":"csv"}}});</script></div></td></tr></tbody></table>

<div style="background-color:grey;height:2px;width:100%;"></div>

<div><pre><small><small>source: <a href="https://github.com/scicloj/clojure-data-scrapbook/blob/london-clojurians-talk/projects/london-clojurians-dec-2023-talk/src/notebooks/commit_details.clj">projects/london-clojurians-dec-2023-talk/src/notebooks/commit_details.clj</a></small></small></pre></div>