
---
format:
  html: {toc: true, toc-depth: 4, theme: spacelab, output-file: ml.html}
code-block-background: true
include-in-header: {text: '<link rel = "icon" href = "data:," />'}

---
<style></style><style>.printedClojure .sourceCode {
  background-color: transparent;
  border-style: none;
}
</style>
<script src="ml_files/md-default0.js" type="text/javascript"></script><script src="ml_files/md-default1.js" type="text/javascript"></script>

```{=html}
<table><tr><td>This is part of the Scicloj <a href="https://scicloj.github.io/clojure-data-scrapbook/">Clojure Data Scrapbook</a>.</td><a href="https://scicloj.github.io/clojure-data-scrapbook/"><img align="left" alt="SciCloj logo" src="https://scicloj.github.io/sci-cloj-logo-transparent.png" width="40" /></a></tr></table>
```



# Machine learning - DRAFT


::: {.sourceClojure}
```clojure
(ns ml
  (:require [scicloj.ml.core :as ml]
            [scicloj.ml.metamorph :as mm]
            [scicloj.ml.dataset :refer [dataset add-column]]
            [scicloj.ml.dataset :as ds]
            [fastmath.stats]
            [tablecloth.api :as tc]
            [scicloj.noj.v1.datasets :as datasets]
            [scicloj.kindly.v4.kind :as kind]))
```
:::



## Linear regression
We will explore the Iris dataset:


::: {.sourceClojure}
```clojure
(tc/head datasets/iris)
```
:::


_unnamed [5 5]:

| :sepal-length | :sepal-width | :petal-length | :petal-width | :species |
|--------------:|-------------:|--------------:|-------------:|----------|
|           5.1 |          3.5 |           1.4 |          0.2 |   setosa |
|           4.9 |          3.0 |           1.4 |          0.2 |   setosa |
|           4.7 |          3.2 |           1.3 |          0.2 |   setosa |
|           4.6 |          3.1 |           1.5 |          0.2 |   setosa |
|           5.0 |          3.6 |           1.4 |          0.2 |   setosa |



A Metamorph pipeline for linear regression:


::: {.sourceClojure}
```clojure
(def additive-pipeline
  (ml/pipeline
   (mm/set-inference-target :sepal-length)
   (mm/drop-columns [:species])
   {:metamorph/id :model}
   (mm/model {:model-type :smile.regression/ordinary-least-square})))
```
:::


Training and evaluating the pipeline on various subsets:


::: {.sourceClojure}
```clojure
(def evaluations
  (ml/evaluate-pipelines
   [additive-pipeline]
   (ds/split->seq datasets/iris :holdout)
   ml/rmse
   :loss
   {:other-metrices [{:name :r2
                      :metric-fn fastmath.stats/r2-determination}]}))
```
:::


Printing one of the trained models (note that the Smile regression model is recognized by Kindly and printed correctly):


::: {.sourceClojure}
```clojure
(-> evaluations
    flatten
    first
    :fit-ctx
    :model
    ml/thaw-model)
```
:::



::: {.printedClojure}
```clojure
Linear Model:

Residuals:
       Min          1Q      Median          3Q         Max
   -0.8076     -0.2157      0.0177      0.2335      0.7341

Coefficients:
                  Estimate Std. Error    t value   Pr(>|t|)
Intercept           1.8682     0.2970     6.2904     0.0000 ***
sepal-width         0.6388     0.0786     8.1279     0.0000 ***
petal-length        0.7250     0.0713    10.1635     0.0000 ***
petal-width        -0.5999     0.1646    -3.6449     0.0004 ***
---------------------------------------------------------------------
Significance codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.3197 on 96 degrees of freedom
Multiple R-squared: 0.8499,    Adjusted R-squared: 0.8452
F-statistic: 181.1746 on 4 and 96 DF,  p-value: 2.137e-39

```
:::



```{=html}
<div style="background-color:grey;height:2px;width:100%;"></div>
```



```{=html}
<div><pre><small><small>source: <a href="https://github.com/scicloj/clojure-data-scrapbook/blob/main/projects/noj/notebooks/ml.clj">projects/noj/notebooks/ml.clj</a></small></small></pre></div>
```
